// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AgentGetRequest_AgentClassify int32

const (
	AgentGetRequest_none    AgentGetRequest_AgentClassify = 0
	AgentGetRequest_online  AgentGetRequest_AgentClassify = 1
	AgentGetRequest_offline AgentGetRequest_AgentClassify = 2
	AgentGetRequest_all     AgentGetRequest_AgentClassify = 3
)

var AgentGetRequest_AgentClassify_name = map[int32]string{
	0: "none",
	1: "online",
	2: "offline",
	3: "all",
}

var AgentGetRequest_AgentClassify_value = map[string]int32{
	"none":    0,
	"online":  1,
	"offline": 2,
	"all":     3,
}

func (x AgentGetRequest_AgentClassify) String() string {
	return proto.EnumName(AgentGetRequest_AgentClassify_name, int32(x))
}

func (AgentGetRequest_AgentClassify) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{24, 0}
}

//--------------comm---------------
// 空message请求
type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

// 空message响应
type EmptyReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyReply) Reset()         { *m = EmptyReply{} }
func (m *EmptyReply) String() string { return proto.CompactTextString(m) }
func (*EmptyReply) ProtoMessage()    {}
func (*EmptyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *EmptyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyReply.Unmarshal(m, b)
}
func (m *EmptyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyReply.Marshal(b, m, deterministic)
}
func (m *EmptyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyReply.Merge(m, src)
}
func (m *EmptyReply) XXX_Size() int {
	return xxx_messageInfo_EmptyReply.Size(m)
}
func (m *EmptyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyReply.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyReply proto.InternalMessageInfo

//--------------org-------------------
//
type OrgNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrgNameRequest) Reset()         { *m = OrgNameRequest{} }
func (m *OrgNameRequest) String() string { return proto.CompactTextString(m) }
func (*OrgNameRequest) ProtoMessage()    {}
func (*OrgNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *OrgNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrgNameRequest.Unmarshal(m, b)
}
func (m *OrgNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrgNameRequest.Marshal(b, m, deterministic)
}
func (m *OrgNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrgNameRequest.Merge(m, src)
}
func (m *OrgNameRequest) XXX_Size() int {
	return xxx_messageInfo_OrgNameRequest.Size(m)
}
func (m *OrgNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrgNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrgNameRequest proto.InternalMessageInfo

func (m *OrgNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OrgAddReply struct {
	Orgid                int32    `protobuf:"varint,1,opt,name=orgid,proto3" json:"orgid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrgAddReply) Reset()         { *m = OrgAddReply{} }
func (m *OrgAddReply) String() string { return proto.CompactTextString(m) }
func (*OrgAddReply) ProtoMessage()    {}
func (*OrgAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *OrgAddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrgAddReply.Unmarshal(m, b)
}
func (m *OrgAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrgAddReply.Marshal(b, m, deterministic)
}
func (m *OrgAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrgAddReply.Merge(m, src)
}
func (m *OrgAddReply) XXX_Size() int {
	return xxx_messageInfo_OrgAddReply.Size(m)
}
func (m *OrgAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OrgAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_OrgAddReply proto.InternalMessageInfo

func (m *OrgAddReply) GetOrgid() int32 {
	if m != nil {
		return m.Orgid
	}
	return 0
}

// 获取组织信息列表
type OrganizationList struct {
	Orgs                 []*OrganizationList_OrganizationInfo `protobuf:"bytes,1,rep,name=orgs,proto3" json:"orgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *OrganizationList) Reset()         { *m = OrganizationList{} }
func (m *OrganizationList) String() string { return proto.CompactTextString(m) }
func (*OrganizationList) ProtoMessage()    {}
func (*OrganizationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *OrganizationList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationList.Unmarshal(m, b)
}
func (m *OrganizationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationList.Marshal(b, m, deterministic)
}
func (m *OrganizationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationList.Merge(m, src)
}
func (m *OrganizationList) XXX_Size() int {
	return xxx_messageInfo_OrganizationList.Size(m)
}
func (m *OrganizationList) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationList.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationList proto.InternalMessageInfo

func (m *OrganizationList) GetOrgs() []*OrganizationList_OrganizationInfo {
	if m != nil {
		return m.Orgs
	}
	return nil
}

type OrganizationList_OrganizationInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ctime                string   `protobuf:"bytes,3,opt,name=ctime,proto3" json:"ctime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrganizationList_OrganizationInfo) Reset()         { *m = OrganizationList_OrganizationInfo{} }
func (m *OrganizationList_OrganizationInfo) String() string { return proto.CompactTextString(m) }
func (*OrganizationList_OrganizationInfo) ProtoMessage()    {}
func (*OrganizationList_OrganizationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4, 0}
}

func (m *OrganizationList_OrganizationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationList_OrganizationInfo.Unmarshal(m, b)
}
func (m *OrganizationList_OrganizationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationList_OrganizationInfo.Marshal(b, m, deterministic)
}
func (m *OrganizationList_OrganizationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationList_OrganizationInfo.Merge(m, src)
}
func (m *OrganizationList_OrganizationInfo) XXX_Size() int {
	return xxx_messageInfo_OrganizationList_OrganizationInfo.Size(m)
}
func (m *OrganizationList_OrganizationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationList_OrganizationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationList_OrganizationInfo proto.InternalMessageInfo

func (m *OrganizationList_OrganizationInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrganizationList_OrganizationInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrganizationList_OrganizationInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

//----------------------------project--------------------------------
type ProjectNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectNameRequest) Reset()         { *m = ProjectNameRequest{} }
func (m *ProjectNameRequest) String() string { return proto.CompactTextString(m) }
func (*ProjectNameRequest) ProtoMessage()    {}
func (*ProjectNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

func (m *ProjectNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectNameRequest.Unmarshal(m, b)
}
func (m *ProjectNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectNameRequest.Marshal(b, m, deterministic)
}
func (m *ProjectNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectNameRequest.Merge(m, src)
}
func (m *ProjectNameRequest) XXX_Size() int {
	return xxx_messageInfo_ProjectNameRequest.Size(m)
}
func (m *ProjectNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectNameRequest proto.InternalMessageInfo

func (m *ProjectNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ProjectAddReply struct {
	Proid                int32    `protobuf:"varint,1,opt,name=proid,proto3" json:"proid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectAddReply) Reset()         { *m = ProjectAddReply{} }
func (m *ProjectAddReply) String() string { return proto.CompactTextString(m) }
func (*ProjectAddReply) ProtoMessage()    {}
func (*ProjectAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

func (m *ProjectAddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectAddReply.Unmarshal(m, b)
}
func (m *ProjectAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectAddReply.Marshal(b, m, deterministic)
}
func (m *ProjectAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectAddReply.Merge(m, src)
}
func (m *ProjectAddReply) XXX_Size() int {
	return xxx_messageInfo_ProjectAddReply.Size(m)
}
func (m *ProjectAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectAddReply proto.InternalMessageInfo

func (m *ProjectAddReply) GetProid() int32 {
	if m != nil {
		return m.Proid
	}
	return 0
}

// 获取项目列表
type ProjectList struct {
	Pros                 []*ProjectList_ProjectInfo `protobuf:"bytes,1,rep,name=pros,proto3" json:"pros,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ProjectList) Reset()         { *m = ProjectList{} }
func (m *ProjectList) String() string { return proto.CompactTextString(m) }
func (*ProjectList) ProtoMessage()    {}
func (*ProjectList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7}
}

func (m *ProjectList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectList.Unmarshal(m, b)
}
func (m *ProjectList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectList.Marshal(b, m, deterministic)
}
func (m *ProjectList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectList.Merge(m, src)
}
func (m *ProjectList) XXX_Size() int {
	return xxx_messageInfo_ProjectList.Size(m)
}
func (m *ProjectList) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectList.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectList proto.InternalMessageInfo

func (m *ProjectList) GetPros() []*ProjectList_ProjectInfo {
	if m != nil {
		return m.Pros
	}
	return nil
}

type ProjectList_ProjectInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ctime                string   `protobuf:"bytes,3,opt,name=ctime,proto3" json:"ctime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectList_ProjectInfo) Reset()         { *m = ProjectList_ProjectInfo{} }
func (m *ProjectList_ProjectInfo) String() string { return proto.CompactTextString(m) }
func (*ProjectList_ProjectInfo) ProtoMessage()    {}
func (*ProjectList_ProjectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7, 0}
}

func (m *ProjectList_ProjectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectList_ProjectInfo.Unmarshal(m, b)
}
func (m *ProjectList_ProjectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectList_ProjectInfo.Marshal(b, m, deterministic)
}
func (m *ProjectList_ProjectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectList_ProjectInfo.Merge(m, src)
}
func (m *ProjectList_ProjectInfo) XXX_Size() int {
	return xxx_messageInfo_ProjectList_ProjectInfo.Size(m)
}
func (m *ProjectList_ProjectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectList_ProjectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectList_ProjectInfo proto.InternalMessageInfo

func (m *ProjectList_ProjectInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProjectList_ProjectInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectList_ProjectInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

//---------------------------------env-------------------------------------
type EnvNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvNameRequest) Reset()         { *m = EnvNameRequest{} }
func (m *EnvNameRequest) String() string { return proto.CompactTextString(m) }
func (*EnvNameRequest) ProtoMessage()    {}
func (*EnvNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{8}
}

func (m *EnvNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvNameRequest.Unmarshal(m, b)
}
func (m *EnvNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvNameRequest.Marshal(b, m, deterministic)
}
func (m *EnvNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvNameRequest.Merge(m, src)
}
func (m *EnvNameRequest) XXX_Size() int {
	return xxx_messageInfo_EnvNameRequest.Size(m)
}
func (m *EnvNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnvNameRequest proto.InternalMessageInfo

func (m *EnvNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EnvAddReply struct {
	Envid                int32    `protobuf:"varint,1,opt,name=envid,proto3" json:"envid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvAddReply) Reset()         { *m = EnvAddReply{} }
func (m *EnvAddReply) String() string { return proto.CompactTextString(m) }
func (*EnvAddReply) ProtoMessage()    {}
func (*EnvAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{9}
}

func (m *EnvAddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvAddReply.Unmarshal(m, b)
}
func (m *EnvAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvAddReply.Marshal(b, m, deterministic)
}
func (m *EnvAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvAddReply.Merge(m, src)
}
func (m *EnvAddReply) XXX_Size() int {
	return xxx_messageInfo_EnvAddReply.Size(m)
}
func (m *EnvAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_EnvAddReply proto.InternalMessageInfo

func (m *EnvAddReply) GetEnvid() int32 {
	if m != nil {
		return m.Envid
	}
	return 0
}

// 获取环境列表
type EnvironmentList struct {
	Envs                 []*EnvironmentList_EnvironmentInfo `protobuf:"bytes,1,rep,name=envs,proto3" json:"envs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *EnvironmentList) Reset()         { *m = EnvironmentList{} }
func (m *EnvironmentList) String() string { return proto.CompactTextString(m) }
func (*EnvironmentList) ProtoMessage()    {}
func (*EnvironmentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{10}
}

func (m *EnvironmentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvironmentList.Unmarshal(m, b)
}
func (m *EnvironmentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvironmentList.Marshal(b, m, deterministic)
}
func (m *EnvironmentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentList.Merge(m, src)
}
func (m *EnvironmentList) XXX_Size() int {
	return xxx_messageInfo_EnvironmentList.Size(m)
}
func (m *EnvironmentList) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentList.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentList proto.InternalMessageInfo

func (m *EnvironmentList) GetEnvs() []*EnvironmentList_EnvironmentInfo {
	if m != nil {
		return m.Envs
	}
	return nil
}

type EnvironmentList_EnvironmentInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ctime                string   `protobuf:"bytes,3,opt,name=ctime,proto3" json:"ctime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvironmentList_EnvironmentInfo) Reset()         { *m = EnvironmentList_EnvironmentInfo{} }
func (m *EnvironmentList_EnvironmentInfo) String() string { return proto.CompactTextString(m) }
func (*EnvironmentList_EnvironmentInfo) ProtoMessage()    {}
func (*EnvironmentList_EnvironmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{10, 0}
}

func (m *EnvironmentList_EnvironmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvironmentList_EnvironmentInfo.Unmarshal(m, b)
}
func (m *EnvironmentList_EnvironmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvironmentList_EnvironmentInfo.Marshal(b, m, deterministic)
}
func (m *EnvironmentList_EnvironmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentList_EnvironmentInfo.Merge(m, src)
}
func (m *EnvironmentList_EnvironmentInfo) XXX_Size() int {
	return xxx_messageInfo_EnvironmentList_EnvironmentInfo.Size(m)
}
func (m *EnvironmentList_EnvironmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentList_EnvironmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentList_EnvironmentInfo proto.InternalMessageInfo

func (m *EnvironmentList_EnvironmentInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EnvironmentList_EnvironmentInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnvironmentList_EnvironmentInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

//----------------------------group--------------------------------
// 添加分组
type GroupAddRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Orgid                int32    `protobuf:"varint,2,opt,name=orgid,proto3" json:"orgid,omitempty"`
	Envid                int32    `protobuf:"varint,3,opt,name=envid,proto3" json:"envid,omitempty"`
	Proid                int32    `protobuf:"varint,4,opt,name=proid,proto3" json:"proid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupAddRequest) Reset()         { *m = GroupAddRequest{} }
func (m *GroupAddRequest) String() string { return proto.CompactTextString(m) }
func (*GroupAddRequest) ProtoMessage()    {}
func (*GroupAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{11}
}

func (m *GroupAddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupAddRequest.Unmarshal(m, b)
}
func (m *GroupAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupAddRequest.Marshal(b, m, deterministic)
}
func (m *GroupAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupAddRequest.Merge(m, src)
}
func (m *GroupAddRequest) XXX_Size() int {
	return xxx_messageInfo_GroupAddRequest.Size(m)
}
func (m *GroupAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupAddRequest proto.InternalMessageInfo

func (m *GroupAddRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GroupAddRequest) GetOrgid() int32 {
	if m != nil {
		return m.Orgid
	}
	return 0
}

func (m *GroupAddRequest) GetEnvid() int32 {
	if m != nil {
		return m.Envid
	}
	return 0
}

func (m *GroupAddRequest) GetProid() int32 {
	if m != nil {
		return m.Proid
	}
	return 0
}

type GroupAddReply struct {
	Groupid              int32    `protobuf:"varint,1,opt,name=groupid,proto3" json:"groupid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupAddReply) Reset()         { *m = GroupAddReply{} }
func (m *GroupAddReply) String() string { return proto.CompactTextString(m) }
func (*GroupAddReply) ProtoMessage()    {}
func (*GroupAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{12}
}

func (m *GroupAddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupAddReply.Unmarshal(m, b)
}
func (m *GroupAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupAddReply.Marshal(b, m, deterministic)
}
func (m *GroupAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupAddReply.Merge(m, src)
}
func (m *GroupAddReply) XXX_Size() int {
	return xxx_messageInfo_GroupAddReply.Size(m)
}
func (m *GroupAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupAddReply proto.InternalMessageInfo

func (m *GroupAddReply) GetGroupid() int32 {
	if m != nil {
		return m.Groupid
	}
	return 0
}

type GroupNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupNameRequest) Reset()         { *m = GroupNameRequest{} }
func (m *GroupNameRequest) String() string { return proto.CompactTextString(m) }
func (*GroupNameRequest) ProtoMessage()    {}
func (*GroupNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{13}
}

func (m *GroupNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupNameRequest.Unmarshal(m, b)
}
func (m *GroupNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupNameRequest.Marshal(b, m, deterministic)
}
func (m *GroupNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupNameRequest.Merge(m, src)
}
func (m *GroupNameRequest) XXX_Size() int {
	return xxx_messageInfo_GroupNameRequest.Size(m)
}
func (m *GroupNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupNameRequest proto.InternalMessageInfo

func (m *GroupNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 获取分组列表
type GroupList struct {
	Groups               []*GroupList_GroupInfo `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GroupList) Reset()         { *m = GroupList{} }
func (m *GroupList) String() string { return proto.CompactTextString(m) }
func (*GroupList) ProtoMessage()    {}
func (*GroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{14}
}

func (m *GroupList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupList.Unmarshal(m, b)
}
func (m *GroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupList.Marshal(b, m, deterministic)
}
func (m *GroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupList.Merge(m, src)
}
func (m *GroupList) XXX_Size() int {
	return xxx_messageInfo_GroupList.Size(m)
}
func (m *GroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupList.DiscardUnknown(m)
}

var xxx_messageInfo_GroupList proto.InternalMessageInfo

func (m *GroupList) GetGroups() []*GroupList_GroupInfo {
	if m != nil {
		return m.Groups
	}
	return nil
}

type GroupList_GroupInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Orgname              string   `protobuf:"bytes,3,opt,name=orgname,proto3" json:"orgname,omitempty"`
	Envname              string   `protobuf:"bytes,4,opt,name=envname,proto3" json:"envname,omitempty"`
	Proname              string   `protobuf:"bytes,5,opt,name=proname,proto3" json:"proname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupList_GroupInfo) Reset()         { *m = GroupList_GroupInfo{} }
func (m *GroupList_GroupInfo) String() string { return proto.CompactTextString(m) }
func (*GroupList_GroupInfo) ProtoMessage()    {}
func (*GroupList_GroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{14, 0}
}

func (m *GroupList_GroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupList_GroupInfo.Unmarshal(m, b)
}
func (m *GroupList_GroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupList_GroupInfo.Marshal(b, m, deterministic)
}
func (m *GroupList_GroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupList_GroupInfo.Merge(m, src)
}
func (m *GroupList_GroupInfo) XXX_Size() int {
	return xxx_messageInfo_GroupList_GroupInfo.Size(m)
}
func (m *GroupList_GroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupList_GroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupList_GroupInfo proto.InternalMessageInfo

func (m *GroupList_GroupInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GroupList_GroupInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GroupList_GroupInfo) GetOrgname() string {
	if m != nil {
		return m.Orgname
	}
	return ""
}

func (m *GroupList_GroupInfo) GetEnvname() string {
	if m != nil {
		return m.Envname
	}
	return ""
}

func (m *GroupList_GroupInfo) GetProname() string {
	if m != nil {
		return m.Proname
	}
	return ""
}

//-----------------------------release--------------------------
type ReleaseNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseNameRequest) Reset()         { *m = ReleaseNameRequest{} }
func (m *ReleaseNameRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseNameRequest) ProtoMessage()    {}
func (*ReleaseNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{15}
}

func (m *ReleaseNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseNameRequest.Unmarshal(m, b)
}
func (m *ReleaseNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseNameRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseNameRequest.Merge(m, src)
}
func (m *ReleaseNameRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseNameRequest.Size(m)
}
func (m *ReleaseNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseNameRequest proto.InternalMessageInfo

func (m *ReleaseNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ReleaseIdRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseIdRequest) Reset()         { *m = ReleaseIdRequest{} }
func (m *ReleaseIdRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseIdRequest) ProtoMessage()    {}
func (*ReleaseIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{16}
}

func (m *ReleaseIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseIdRequest.Unmarshal(m, b)
}
func (m *ReleaseIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseIdRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseIdRequest.Merge(m, src)
}
func (m *ReleaseIdRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseIdRequest.Size(m)
}
func (m *ReleaseIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseIdRequest proto.InternalMessageInfo

func (m *ReleaseIdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReleaseAddReply struct {
	Releaseid            int32    `protobuf:"varint,1,opt,name=releaseid,proto3" json:"releaseid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseAddReply) Reset()         { *m = ReleaseAddReply{} }
func (m *ReleaseAddReply) String() string { return proto.CompactTextString(m) }
func (*ReleaseAddReply) ProtoMessage()    {}
func (*ReleaseAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{17}
}

func (m *ReleaseAddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseAddReply.Unmarshal(m, b)
}
func (m *ReleaseAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseAddReply.Marshal(b, m, deterministic)
}
func (m *ReleaseAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseAddReply.Merge(m, src)
}
func (m *ReleaseAddReply) XXX_Size() int {
	return xxx_messageInfo_ReleaseAddReply.Size(m)
}
func (m *ReleaseAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseAddReply proto.InternalMessageInfo

func (m *ReleaseAddReply) GetReleaseid() int32 {
	if m != nil {
		return m.Releaseid
	}
	return 0
}

// 发布代码
type ReleaseCode struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Relativepath         string   `protobuf:"bytes,2,opt,name=relativepath,proto3" json:"relativepath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseCode) Reset()         { *m = ReleaseCode{} }
func (m *ReleaseCode) String() string { return proto.CompactTextString(m) }
func (*ReleaseCode) ProtoMessage()    {}
func (*ReleaseCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{18}
}

func (m *ReleaseCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseCode.Unmarshal(m, b)
}
func (m *ReleaseCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseCode.Marshal(b, m, deterministic)
}
func (m *ReleaseCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseCode.Merge(m, src)
}
func (m *ReleaseCode) XXX_Size() int {
	return xxx_messageInfo_ReleaseCode.Size(m)
}
func (m *ReleaseCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseCode.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseCode proto.InternalMessageInfo

func (m *ReleaseCode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReleaseCode) GetRelativepath() string {
	if m != nil {
		return m.Relativepath
	}
	return ""
}

// 添加发布
type AddReleaseRequest struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Orgid                int32          `protobuf:"varint,3,opt,name=orgid,proto3" json:"orgid,omitempty"`
	Proid                int32          `protobuf:"varint,4,opt,name=proid,proto3" json:"proid,omitempty"`
	Releasecodes         []*ReleaseCode `protobuf:"bytes,5,rep,name=releasecodes,proto3" json:"releasecodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AddReleaseRequest) Reset()         { *m = AddReleaseRequest{} }
func (m *AddReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*AddReleaseRequest) ProtoMessage()    {}
func (*AddReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{19}
}

func (m *AddReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReleaseRequest.Unmarshal(m, b)
}
func (m *AddReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReleaseRequest.Marshal(b, m, deterministic)
}
func (m *AddReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReleaseRequest.Merge(m, src)
}
func (m *AddReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_AddReleaseRequest.Size(m)
}
func (m *AddReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddReleaseRequest proto.InternalMessageInfo

func (m *AddReleaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddReleaseRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *AddReleaseRequest) GetOrgid() int32 {
	if m != nil {
		return m.Orgid
	}
	return 0
}

func (m *AddReleaseRequest) GetProid() int32 {
	if m != nil {
		return m.Proid
	}
	return 0
}

func (m *AddReleaseRequest) GetReleasecodes() []*ReleaseCode {
	if m != nil {
		return m.Releasecodes
	}
	return nil
}

// 发布代码列表
type ReleaseCodeList struct {
	Releasecodes         []*ReleaseCodeList_ReleaseCodeInfo `protobuf:"bytes,1,rep,name=releasecodes,proto3" json:"releasecodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ReleaseCodeList) Reset()         { *m = ReleaseCodeList{} }
func (m *ReleaseCodeList) String() string { return proto.CompactTextString(m) }
func (*ReleaseCodeList) ProtoMessage()    {}
func (*ReleaseCodeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{20}
}

func (m *ReleaseCodeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseCodeList.Unmarshal(m, b)
}
func (m *ReleaseCodeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseCodeList.Marshal(b, m, deterministic)
}
func (m *ReleaseCodeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseCodeList.Merge(m, src)
}
func (m *ReleaseCodeList) XXX_Size() int {
	return xxx_messageInfo_ReleaseCodeList.Size(m)
}
func (m *ReleaseCodeList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseCodeList.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseCodeList proto.InternalMessageInfo

func (m *ReleaseCodeList) GetReleasecodes() []*ReleaseCodeList_ReleaseCodeInfo {
	if m != nil {
		return m.Releasecodes
	}
	return nil
}

type ReleaseCodeList_ReleaseCodeInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseCodeList_ReleaseCodeInfo) Reset()         { *m = ReleaseCodeList_ReleaseCodeInfo{} }
func (m *ReleaseCodeList_ReleaseCodeInfo) String() string { return proto.CompactTextString(m) }
func (*ReleaseCodeList_ReleaseCodeInfo) ProtoMessage()    {}
func (*ReleaseCodeList_ReleaseCodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{20, 0}
}

func (m *ReleaseCodeList_ReleaseCodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseCodeList_ReleaseCodeInfo.Unmarshal(m, b)
}
func (m *ReleaseCodeList_ReleaseCodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseCodeList_ReleaseCodeInfo.Marshal(b, m, deterministic)
}
func (m *ReleaseCodeList_ReleaseCodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseCodeList_ReleaseCodeInfo.Merge(m, src)
}
func (m *ReleaseCodeList_ReleaseCodeInfo) XXX_Size() int {
	return xxx_messageInfo_ReleaseCodeList_ReleaseCodeInfo.Size(m)
}
func (m *ReleaseCodeList_ReleaseCodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseCodeList_ReleaseCodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseCodeList_ReleaseCodeInfo proto.InternalMessageInfo

func (m *ReleaseCodeList_ReleaseCodeInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReleaseCodeList_ReleaseCodeInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//-------------------------------------Agent------------------------
// Agent
type AgentList struct {
	Agents               []*AgentList_AgentInfo `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AgentList) Reset()         { *m = AgentList{} }
func (m *AgentList) String() string { return proto.CompactTextString(m) }
func (*AgentList) ProtoMessage()    {}
func (*AgentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{21}
}

func (m *AgentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentList.Unmarshal(m, b)
}
func (m *AgentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentList.Marshal(b, m, deterministic)
}
func (m *AgentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentList.Merge(m, src)
}
func (m *AgentList) XXX_Size() int {
	return xxx_messageInfo_AgentList.Size(m)
}
func (m *AgentList) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentList.DiscardUnknown(m)
}

var xxx_messageInfo_AgentList proto.InternalMessageInfo

func (m *AgentList) GetAgents() []*AgentList_AgentInfo {
	if m != nil {
		return m.Agents
	}
	return nil
}

type AgentList_AgentInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias                string   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Hostip               string   `protobuf:"bytes,4,opt,name=hostip,proto3" json:"hostip,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Ctime                string   `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Utime                string   `protobuf:"bytes,7,opt,name=utime,proto3" json:"utime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentList_AgentInfo) Reset()         { *m = AgentList_AgentInfo{} }
func (m *AgentList_AgentInfo) String() string { return proto.CompactTextString(m) }
func (*AgentList_AgentInfo) ProtoMessage()    {}
func (*AgentList_AgentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{21, 0}
}

func (m *AgentList_AgentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentList_AgentInfo.Unmarshal(m, b)
}
func (m *AgentList_AgentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentList_AgentInfo.Marshal(b, m, deterministic)
}
func (m *AgentList_AgentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentList_AgentInfo.Merge(m, src)
}
func (m *AgentList_AgentInfo) XXX_Size() int {
	return xxx_messageInfo_AgentList_AgentInfo.Size(m)
}
func (m *AgentList_AgentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentList_AgentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentList_AgentInfo proto.InternalMessageInfo

func (m *AgentList_AgentInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AgentList_AgentInfo) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *AgentList_AgentInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *AgentList_AgentInfo) GetHostip() string {
	if m != nil {
		return m.Hostip
	}
	return ""
}

func (m *AgentList_AgentInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AgentList_AgentInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *AgentList_AgentInfo) GetUtime() string {
	if m != nil {
		return m.Utime
	}
	return ""
}

type AgentRestartRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Op                   string   `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentRestartRequest) Reset()         { *m = AgentRestartRequest{} }
func (m *AgentRestartRequest) String() string { return proto.CompactTextString(m) }
func (*AgentRestartRequest) ProtoMessage()    {}
func (*AgentRestartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{22}
}

func (m *AgentRestartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentRestartRequest.Unmarshal(m, b)
}
func (m *AgentRestartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentRestartRequest.Marshal(b, m, deterministic)
}
func (m *AgentRestartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentRestartRequest.Merge(m, src)
}
func (m *AgentRestartRequest) XXX_Size() int {
	return xxx_messageInfo_AgentRestartRequest.Size(m)
}
func (m *AgentRestartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentRestartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AgentRestartRequest proto.InternalMessageInfo

func (m *AgentRestartRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AgentRestartRequest) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

type AgentAliasRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias                string   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentAliasRequest) Reset()         { *m = AgentAliasRequest{} }
func (m *AgentAliasRequest) String() string { return proto.CompactTextString(m) }
func (*AgentAliasRequest) ProtoMessage()    {}
func (*AgentAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{23}
}

func (m *AgentAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentAliasRequest.Unmarshal(m, b)
}
func (m *AgentAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentAliasRequest.Marshal(b, m, deterministic)
}
func (m *AgentAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentAliasRequest.Merge(m, src)
}
func (m *AgentAliasRequest) XXX_Size() int {
	return xxx_messageInfo_AgentAliasRequest.Size(m)
}
func (m *AgentAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AgentAliasRequest proto.InternalMessageInfo

func (m *AgentAliasRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AgentAliasRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type AgentGetRequest struct {
	Ac                   AgentGetRequest_AgentClassify `protobuf:"varint,1,opt,name=ac,proto3,enum=AgentGetRequest_AgentClassify" json:"ac,omitempty"`
	Groupid              int32                         `protobuf:"varint,2,opt,name=groupid,proto3" json:"groupid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *AgentGetRequest) Reset()         { *m = AgentGetRequest{} }
func (m *AgentGetRequest) String() string { return proto.CompactTextString(m) }
func (*AgentGetRequest) ProtoMessage()    {}
func (*AgentGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{24}
}

func (m *AgentGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentGetRequest.Unmarshal(m, b)
}
func (m *AgentGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentGetRequest.Marshal(b, m, deterministic)
}
func (m *AgentGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentGetRequest.Merge(m, src)
}
func (m *AgentGetRequest) XXX_Size() int {
	return xxx_messageInfo_AgentGetRequest.Size(m)
}
func (m *AgentGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AgentGetRequest proto.InternalMessageInfo

func (m *AgentGetRequest) GetAc() AgentGetRequest_AgentClassify {
	if m != nil {
		return m.Ac
	}
	return AgentGetRequest_none
}

func (m *AgentGetRequest) GetGroupid() int32 {
	if m != nil {
		return m.Groupid
	}
	return 0
}

//--------------------service---------------------------------------------
// 添加服务请求
type ServiceAddRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dir                  string   `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
	Moudlename           string   `protobuf:"bytes,3,opt,name=moudlename,proto3" json:"moudlename,omitempty"`
	Osuser               string   `protobuf:"bytes,4,opt,name=osuser,proto3" json:"osuser,omitempty"`
	Codepattern          string   `protobuf:"bytes,5,opt,name=codepattern,proto3" json:"codepattern,omitempty"`
	Pidfile              string   `protobuf:"bytes,7,opt,name=pidfile,proto3" json:"pidfile,omitempty"`
	Startcmd             string   `protobuf:"bytes,8,opt,name=startcmd,proto3" json:"startcmd,omitempty"`
	Stopcmd              string   `protobuf:"bytes,9,opt,name=stopcmd,proto3" json:"stopcmd,omitempty"`
	Agentid              string   `protobuf:"bytes,10,opt,name=agentid,proto3" json:"agentid,omitempty"`
	Groupid              int32    `protobuf:"varint,11,opt,name=groupid,proto3" json:"groupid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAddRequest) Reset()         { *m = ServiceAddRequest{} }
func (m *ServiceAddRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceAddRequest) ProtoMessage()    {}
func (*ServiceAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{25}
}

func (m *ServiceAddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAddRequest.Unmarshal(m, b)
}
func (m *ServiceAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAddRequest.Marshal(b, m, deterministic)
}
func (m *ServiceAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAddRequest.Merge(m, src)
}
func (m *ServiceAddRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceAddRequest.Size(m)
}
func (m *ServiceAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAddRequest proto.InternalMessageInfo

func (m *ServiceAddRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceAddRequest) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *ServiceAddRequest) GetMoudlename() string {
	if m != nil {
		return m.Moudlename
	}
	return ""
}

func (m *ServiceAddRequest) GetOsuser() string {
	if m != nil {
		return m.Osuser
	}
	return ""
}

func (m *ServiceAddRequest) GetCodepattern() string {
	if m != nil {
		return m.Codepattern
	}
	return ""
}

func (m *ServiceAddRequest) GetPidfile() string {
	if m != nil {
		return m.Pidfile
	}
	return ""
}

func (m *ServiceAddRequest) GetStartcmd() string {
	if m != nil {
		return m.Startcmd
	}
	return ""
}

func (m *ServiceAddRequest) GetStopcmd() string {
	if m != nil {
		return m.Stopcmd
	}
	return ""
}

func (m *ServiceAddRequest) GetAgentid() string {
	if m != nil {
		return m.Agentid
	}
	return ""
}

func (m *ServiceAddRequest) GetGroupid() int32 {
	if m != nil {
		return m.Groupid
	}
	return 0
}

// 添加服务响应
type ServiceAddReply struct {
	Serviceid            string   `protobuf:"bytes,1,opt,name=serviceid,proto3" json:"serviceid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAddReply) Reset()         { *m = ServiceAddReply{} }
func (m *ServiceAddReply) String() string { return proto.CompactTextString(m) }
func (*ServiceAddReply) ProtoMessage()    {}
func (*ServiceAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{26}
}

func (m *ServiceAddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAddReply.Unmarshal(m, b)
}
func (m *ServiceAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAddReply.Marshal(b, m, deterministic)
}
func (m *ServiceAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAddReply.Merge(m, src)
}
func (m *ServiceAddReply) XXX_Size() int {
	return xxx_messageInfo_ServiceAddReply.Size(m)
}
func (m *ServiceAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAddReply proto.InternalMessageInfo

func (m *ServiceAddReply) GetServiceid() string {
	if m != nil {
		return m.Serviceid
	}
	return ""
}

//删除服务请求
type ServiceDeleteRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceDeleteRequest) Reset()         { *m = ServiceDeleteRequest{} }
func (m *ServiceDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceDeleteRequest) ProtoMessage()    {}
func (*ServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{27}
}

func (m *ServiceDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceDeleteRequest.Unmarshal(m, b)
}
func (m *ServiceDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceDeleteRequest.Marshal(b, m, deterministic)
}
func (m *ServiceDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceDeleteRequest.Merge(m, src)
}
func (m *ServiceDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceDeleteRequest.Size(m)
}
func (m *ServiceDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceDeleteRequest proto.InternalMessageInfo

func (m *ServiceDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// 查询服务请求
type ServiceRequest struct {
	Groupids             []int32  `protobuf:"varint,1,rep,packed,name=groupids,proto3" json:"groupids,omitempty"`
	Agentids             []string `protobuf:"bytes,2,rep,name=agentids,proto3" json:"agentids,omitempty"`
	Moudlenames          []string `protobuf:"bytes,3,rep,name=moudlenames,proto3" json:"moudlenames,omitempty"`
	Serviceids           []string `protobuf:"bytes,4,rep,name=serviceids,proto3" json:"serviceids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceRequest) Reset()         { *m = ServiceRequest{} }
func (m *ServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceRequest) ProtoMessage()    {}
func (*ServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{28}
}

func (m *ServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceRequest.Unmarshal(m, b)
}
func (m *ServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceRequest.Marshal(b, m, deterministic)
}
func (m *ServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceRequest.Merge(m, src)
}
func (m *ServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceRequest.Size(m)
}
func (m *ServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceRequest proto.InternalMessageInfo

func (m *ServiceRequest) GetGroupids() []int32 {
	if m != nil {
		return m.Groupids
	}
	return nil
}

func (m *ServiceRequest) GetAgentids() []string {
	if m != nil {
		return m.Agentids
	}
	return nil
}

func (m *ServiceRequest) GetMoudlenames() []string {
	if m != nil {
		return m.Moudlenames
	}
	return nil
}

func (m *ServiceRequest) GetServiceids() []string {
	if m != nil {
		return m.Serviceids
	}
	return nil
}

// 查询服务结果响应
type ServiceList struct {
	Services             []*ServiceList_ServiceInfo `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ServiceList) Reset()         { *m = ServiceList{} }
func (m *ServiceList) String() string { return proto.CompactTextString(m) }
func (*ServiceList) ProtoMessage()    {}
func (*ServiceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{29}
}

func (m *ServiceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceList.Unmarshal(m, b)
}
func (m *ServiceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceList.Marshal(b, m, deterministic)
}
func (m *ServiceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceList.Merge(m, src)
}
func (m *ServiceList) XXX_Size() int {
	return xxx_messageInfo_ServiceList.Size(m)
}
func (m *ServiceList) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceList.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceList proto.InternalMessageInfo

func (m *ServiceList) GetServices() []*ServiceList_ServiceInfo {
	if m != nil {
		return m.Services
	}
	return nil
}

type ServiceList_ServiceInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Dir                  string   `protobuf:"bytes,3,opt,name=dir,proto3" json:"dir,omitempty"`
	Moudlename           string   `protobuf:"bytes,4,opt,name=moudlename,proto3" json:"moudlename,omitempty"`
	Osuser               string   `protobuf:"bytes,5,opt,name=osuser,proto3" json:"osuser,omitempty"`
	Codepattern          string   `protobuf:"bytes,6,opt,name=codepattern,proto3" json:"codepattern,omitempty"`
	Port                 int32    `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	Pidfile              string   `protobuf:"bytes,8,opt,name=pidfile,proto3" json:"pidfile,omitempty"`
	Startcmd             string   `protobuf:"bytes,9,opt,name=startcmd,proto3" json:"startcmd,omitempty"`
	Stopcmd              string   `protobuf:"bytes,10,opt,name=stopcmd,proto3" json:"stopcmd,omitempty"`
	Agentname            string   `protobuf:"bytes,12,opt,name=agentname,proto3" json:"agentname,omitempty"`
	Groupname            string   `protobuf:"bytes,13,opt,name=groupname,proto3" json:"groupname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceList_ServiceInfo) Reset()         { *m = ServiceList_ServiceInfo{} }
func (m *ServiceList_ServiceInfo) String() string { return proto.CompactTextString(m) }
func (*ServiceList_ServiceInfo) ProtoMessage()    {}
func (*ServiceList_ServiceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{29, 0}
}

func (m *ServiceList_ServiceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceList_ServiceInfo.Unmarshal(m, b)
}
func (m *ServiceList_ServiceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceList_ServiceInfo.Marshal(b, m, deterministic)
}
func (m *ServiceList_ServiceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceList_ServiceInfo.Merge(m, src)
}
func (m *ServiceList_ServiceInfo) XXX_Size() int {
	return xxx_messageInfo_ServiceList_ServiceInfo.Size(m)
}
func (m *ServiceList_ServiceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceList_ServiceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceList_ServiceInfo proto.InternalMessageInfo

func (m *ServiceList_ServiceInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetMoudlename() string {
	if m != nil {
		return m.Moudlename
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetOsuser() string {
	if m != nil {
		return m.Osuser
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetCodepattern() string {
	if m != nil {
		return m.Codepattern
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ServiceList_ServiceInfo) GetPidfile() string {
	if m != nil {
		return m.Pidfile
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetStartcmd() string {
	if m != nil {
		return m.Startcmd
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetStopcmd() string {
	if m != nil {
		return m.Stopcmd
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetAgentname() string {
	if m != nil {
		return m.Agentname
	}
	return ""
}

func (m *ServiceList_ServiceInfo) GetGroupname() string {
	if m != nil {
		return m.Groupname
	}
	return ""
}

// 修改服务agent属组和group属组请求
type ServiceChangeOwnRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Agentid              string   `protobuf:"bytes,2,opt,name=agentid,proto3" json:"agentid,omitempty"`
	Groupid              int32    `protobuf:"varint,3,opt,name=groupid,proto3" json:"groupid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceChangeOwnRequest) Reset()         { *m = ServiceChangeOwnRequest{} }
func (m *ServiceChangeOwnRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceChangeOwnRequest) ProtoMessage()    {}
func (*ServiceChangeOwnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{30}
}

func (m *ServiceChangeOwnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceChangeOwnRequest.Unmarshal(m, b)
}
func (m *ServiceChangeOwnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceChangeOwnRequest.Marshal(b, m, deterministic)
}
func (m *ServiceChangeOwnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceChangeOwnRequest.Merge(m, src)
}
func (m *ServiceChangeOwnRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceChangeOwnRequest.Size(m)
}
func (m *ServiceChangeOwnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceChangeOwnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceChangeOwnRequest proto.InternalMessageInfo

func (m *ServiceChangeOwnRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceChangeOwnRequest) GetAgentid() string {
	if m != nil {
		return m.Agentid
	}
	return ""
}

func (m *ServiceChangeOwnRequest) GetGroupid() int32 {
	if m != nil {
		return m.Groupid
	}
	return 0
}

//--------------------------------------task--------------------------------
type TaksNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaksNameRequest) Reset()         { *m = TaksNameRequest{} }
func (m *TaksNameRequest) String() string { return proto.CompactTextString(m) }
func (*TaksNameRequest) ProtoMessage()    {}
func (*TaksNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{31}
}

func (m *TaksNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaksNameRequest.Unmarshal(m, b)
}
func (m *TaksNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaksNameRequest.Marshal(b, m, deterministic)
}
func (m *TaksNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaksNameRequest.Merge(m, src)
}
func (m *TaksNameRequest) XXX_Size() int {
	return xxx_messageInfo_TaksNameRequest.Size(m)
}
func (m *TaksNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaksNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaksNameRequest proto.InternalMessageInfo

func (m *TaksNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TaskIdRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskIdRequest) Reset()         { *m = TaskIdRequest{} }
func (m *TaskIdRequest) String() string { return proto.CompactTextString(m) }
func (*TaskIdRequest) ProtoMessage()    {}
func (*TaskIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{32}
}

func (m *TaskIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskIdRequest.Unmarshal(m, b)
}
func (m *TaskIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskIdRequest.Marshal(b, m, deterministic)
}
func (m *TaskIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskIdRequest.Merge(m, src)
}
func (m *TaskIdRequest) XXX_Size() int {
	return xxx_messageInfo_TaskIdRequest.Size(m)
}
func (m *TaskIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskIdRequest proto.InternalMessageInfo

func (m *TaskIdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

//添加任务
type TaskAddRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Groupid              int32    `protobuf:"varint,2,opt,name=groupid,proto3" json:"groupid,omitempty"`
	Releaseid            int32    `protobuf:"varint,3,opt,name=releaseid,proto3" json:"releaseid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskAddRequest) Reset()         { *m = TaskAddRequest{} }
func (m *TaskAddRequest) String() string { return proto.CompactTextString(m) }
func (*TaskAddRequest) ProtoMessage()    {}
func (*TaskAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{33}
}

func (m *TaskAddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskAddRequest.Unmarshal(m, b)
}
func (m *TaskAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskAddRequest.Marshal(b, m, deterministic)
}
func (m *TaskAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskAddRequest.Merge(m, src)
}
func (m *TaskAddRequest) XXX_Size() int {
	return xxx_messageInfo_TaskAddRequest.Size(m)
}
func (m *TaskAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskAddRequest proto.InternalMessageInfo

func (m *TaskAddRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskAddRequest) GetGroupid() int32 {
	if m != nil {
		return m.Groupid
	}
	return 0
}

func (m *TaskAddRequest) GetReleaseid() int32 {
	if m != nil {
		return m.Releaseid
	}
	return 0
}

type TaskAddReply struct {
	Taskid               int32    `protobuf:"varint,1,opt,name=taskid,proto3" json:"taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskAddReply) Reset()         { *m = TaskAddReply{} }
func (m *TaskAddReply) String() string { return proto.CompactTextString(m) }
func (*TaskAddReply) ProtoMessage()    {}
func (*TaskAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{34}
}

func (m *TaskAddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskAddReply.Unmarshal(m, b)
}
func (m *TaskAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskAddReply.Marshal(b, m, deterministic)
}
func (m *TaskAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskAddReply.Merge(m, src)
}
func (m *TaskAddReply) XXX_Size() int {
	return xxx_messageInfo_TaskAddReply.Size(m)
}
func (m *TaskAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_TaskAddReply proto.InternalMessageInfo

func (m *TaskAddReply) GetTaskid() int32 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

type TaskList struct {
	Tasks                []*TaskList_TaskInfo `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TaskList) Reset()         { *m = TaskList{} }
func (m *TaskList) String() string { return proto.CompactTextString(m) }
func (*TaskList) ProtoMessage()    {}
func (*TaskList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{35}
}

func (m *TaskList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskList.Unmarshal(m, b)
}
func (m *TaskList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskList.Marshal(b, m, deterministic)
}
func (m *TaskList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskList.Merge(m, src)
}
func (m *TaskList) XXX_Size() int {
	return xxx_messageInfo_TaskList.Size(m)
}
func (m *TaskList) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskList.DiscardUnknown(m)
}

var xxx_messageInfo_TaskList proto.InternalMessageInfo

func (m *TaskList) GetTasks() []*TaskList_TaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type TaskList_TaskInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Ctime                string   `protobuf:"bytes,4,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Starttime            string   `protobuf:"bytes,5,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Endtime              string   `protobuf:"bytes,6,opt,name=endtime,proto3" json:"endtime,omitempty"`
	Releasename          string   `protobuf:"bytes,7,opt,name=releasename,proto3" json:"releasename,omitempty"`
	Groupname            string   `protobuf:"bytes,8,opt,name=groupname,proto3" json:"groupname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskList_TaskInfo) Reset()         { *m = TaskList_TaskInfo{} }
func (m *TaskList_TaskInfo) String() string { return proto.CompactTextString(m) }
func (*TaskList_TaskInfo) ProtoMessage()    {}
func (*TaskList_TaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{35, 0}
}

func (m *TaskList_TaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskList_TaskInfo.Unmarshal(m, b)
}
func (m *TaskList_TaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskList_TaskInfo.Marshal(b, m, deterministic)
}
func (m *TaskList_TaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskList_TaskInfo.Merge(m, src)
}
func (m *TaskList_TaskInfo) XXX_Size() int {
	return xxx_messageInfo_TaskList_TaskInfo.Size(m)
}
func (m *TaskList_TaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskList_TaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskList_TaskInfo proto.InternalMessageInfo

func (m *TaskList_TaskInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TaskList_TaskInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskList_TaskInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TaskList_TaskInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *TaskList_TaskInfo) GetStarttime() string {
	if m != nil {
		return m.Starttime
	}
	return ""
}

func (m *TaskList_TaskInfo) GetEndtime() string {
	if m != nil {
		return m.Endtime
	}
	return ""
}

func (m *TaskList_TaskInfo) GetReleasename() string {
	if m != nil {
		return m.Releasename
	}
	return ""
}

func (m *TaskList_TaskInfo) GetGroupname() string {
	if m != nil {
		return m.Groupname
	}
	return ""
}

// 具体每个服务的操作，
// 如果operation是0，则releasecodeid要指定;否则不需要指定
type SpecificService struct {
	Serviceid            string   `protobuf:"bytes,1,opt,name=serviceid,proto3" json:"serviceid,omitempty"`
	Operation            int32    `protobuf:"varint,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Releasecodeid        int32    `protobuf:"varint,3,opt,name=releasecodeid,proto3" json:"releasecodeid,omitempty"`
	Customupgradepattern string   `protobuf:"bytes,4,opt,name=customupgradepattern,proto3" json:"customupgradepattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecificService) Reset()         { *m = SpecificService{} }
func (m *SpecificService) String() string { return proto.CompactTextString(m) }
func (*SpecificService) ProtoMessage()    {}
func (*SpecificService) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{36}
}

func (m *SpecificService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecificService.Unmarshal(m, b)
}
func (m *SpecificService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecificService.Marshal(b, m, deterministic)
}
func (m *SpecificService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecificService.Merge(m, src)
}
func (m *SpecificService) XXX_Size() int {
	return xxx_messageInfo_SpecificService.Size(m)
}
func (m *SpecificService) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecificService.DiscardUnknown(m)
}

var xxx_messageInfo_SpecificService proto.InternalMessageInfo

func (m *SpecificService) GetServiceid() string {
	if m != nil {
		return m.Serviceid
	}
	return ""
}

func (m *SpecificService) GetOperation() int32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

func (m *SpecificService) GetReleasecodeid() int32 {
	if m != nil {
		return m.Releasecodeid
	}
	return 0
}

func (m *SpecificService) GetCustomupgradepattern() string {
	if m != nil {
		return m.Customupgradepattern
	}
	return ""
}

type TaskDetailsRequst struct {
	Taskid               int32              `protobuf:"varint,1,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Sslist               []*SpecificService `protobuf:"bytes,2,rep,name=sslist,proto3" json:"sslist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TaskDetailsRequst) Reset()         { *m = TaskDetailsRequst{} }
func (m *TaskDetailsRequst) String() string { return proto.CompactTextString(m) }
func (*TaskDetailsRequst) ProtoMessage()    {}
func (*TaskDetailsRequst) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{37}
}

func (m *TaskDetailsRequst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDetailsRequst.Unmarshal(m, b)
}
func (m *TaskDetailsRequst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDetailsRequst.Marshal(b, m, deterministic)
}
func (m *TaskDetailsRequst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDetailsRequst.Merge(m, src)
}
func (m *TaskDetailsRequst) XXX_Size() int {
	return xxx_messageInfo_TaskDetailsRequst.Size(m)
}
func (m *TaskDetailsRequst) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDetailsRequst.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDetailsRequst proto.InternalMessageInfo

func (m *TaskDetailsRequst) GetTaskid() int32 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *TaskDetailsRequst) GetSslist() []*SpecificService {
	if m != nil {
		return m.Sslist
	}
	return nil
}

type ExecutionList struct {
	Executions           []*ExecutionList_ExecutionInfo `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ExecutionList) Reset()         { *m = ExecutionList{} }
func (m *ExecutionList) String() string { return proto.CompactTextString(m) }
func (*ExecutionList) ProtoMessage()    {}
func (*ExecutionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{38}
}

func (m *ExecutionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionList.Unmarshal(m, b)
}
func (m *ExecutionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionList.Marshal(b, m, deterministic)
}
func (m *ExecutionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionList.Merge(m, src)
}
func (m *ExecutionList) XXX_Size() int {
	return xxx_messageInfo_ExecutionList.Size(m)
}
func (m *ExecutionList) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionList.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionList proto.InternalMessageInfo

func (m *ExecutionList) GetExecutions() []*ExecutionList_ExecutionInfo {
	if m != nil {
		return m.Executions
	}
	return nil
}

type ExecutionList_ExecutionInfo struct {
	Taskname             string   `protobuf:"bytes,1,opt,name=taskname,proto3" json:"taskname,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Servicename          string   `protobuf:"bytes,3,opt,name=servicename,proto3" json:"servicename,omitempty"`
	Operation            int32    `protobuf:"varint,4,opt,name=operation,proto3" json:"operation,omitempty"`
	Rcode                int32    `protobuf:"varint,5,opt,name=rcode,proto3" json:"rcode,omitempty"`
	Rmsg                 string   `protobuf:"bytes,6,opt,name=rmsg,proto3" json:"rmsg,omitempty"`
	Customupgradepattern string   `protobuf:"bytes,7,opt,name=customupgradepattern,proto3" json:"customupgradepattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionList_ExecutionInfo) Reset()         { *m = ExecutionList_ExecutionInfo{} }
func (m *ExecutionList_ExecutionInfo) String() string { return proto.CompactTextString(m) }
func (*ExecutionList_ExecutionInfo) ProtoMessage()    {}
func (*ExecutionList_ExecutionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{38, 0}
}

func (m *ExecutionList_ExecutionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionList_ExecutionInfo.Unmarshal(m, b)
}
func (m *ExecutionList_ExecutionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionList_ExecutionInfo.Marshal(b, m, deterministic)
}
func (m *ExecutionList_ExecutionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionList_ExecutionInfo.Merge(m, src)
}
func (m *ExecutionList_ExecutionInfo) XXX_Size() int {
	return xxx_messageInfo_ExecutionList_ExecutionInfo.Size(m)
}
func (m *ExecutionList_ExecutionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionList_ExecutionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionList_ExecutionInfo proto.InternalMessageInfo

func (m *ExecutionList_ExecutionInfo) GetTaskname() string {
	if m != nil {
		return m.Taskname
	}
	return ""
}

func (m *ExecutionList_ExecutionInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExecutionList_ExecutionInfo) GetServicename() string {
	if m != nil {
		return m.Servicename
	}
	return ""
}

func (m *ExecutionList_ExecutionInfo) GetOperation() int32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

func (m *ExecutionList_ExecutionInfo) GetRcode() int32 {
	if m != nil {
		return m.Rcode
	}
	return 0
}

func (m *ExecutionList_ExecutionInfo) GetRmsg() string {
	if m != nil {
		return m.Rmsg
	}
	return ""
}

func (m *ExecutionList_ExecutionInfo) GetCustomupgradepattern() string {
	if m != nil {
		return m.Customupgradepattern
	}
	return ""
}

type TaskString struct {
	Taskstr              string   `protobuf:"bytes,1,opt,name=taskstr,proto3" json:"taskstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskString) Reset()         { *m = TaskString{} }
func (m *TaskString) String() string { return proto.CompactTextString(m) }
func (*TaskString) ProtoMessage()    {}
func (*TaskString) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{39}
}

func (m *TaskString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskString.Unmarshal(m, b)
}
func (m *TaskString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskString.Marshal(b, m, deterministic)
}
func (m *TaskString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskString.Merge(m, src)
}
func (m *TaskString) XXX_Size() int {
	return xxx_messageInfo_TaskString.Size(m)
}
func (m *TaskString) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskString.DiscardUnknown(m)
}

var xxx_messageInfo_TaskString proto.InternalMessageInfo

func (m *TaskString) GetTaskstr() string {
	if m != nil {
		return m.Taskstr
	}
	return ""
}

func init() {
	proto.RegisterEnum("AgentGetRequest_AgentClassify", AgentGetRequest_AgentClassify_name, AgentGetRequest_AgentClassify_value)
	proto.RegisterType((*EmptyRequest)(nil), "EmptyRequest")
	proto.RegisterType((*EmptyReply)(nil), "EmptyReply")
	proto.RegisterType((*OrgNameRequest)(nil), "OrgNameRequest")
	proto.RegisterType((*OrgAddReply)(nil), "OrgAddReply")
	proto.RegisterType((*OrganizationList)(nil), "OrganizationList")
	proto.RegisterType((*OrganizationList_OrganizationInfo)(nil), "OrganizationList.OrganizationInfo")
	proto.RegisterType((*ProjectNameRequest)(nil), "ProjectNameRequest")
	proto.RegisterType((*ProjectAddReply)(nil), "ProjectAddReply")
	proto.RegisterType((*ProjectList)(nil), "ProjectList")
	proto.RegisterType((*ProjectList_ProjectInfo)(nil), "ProjectList.ProjectInfo")
	proto.RegisterType((*EnvNameRequest)(nil), "EnvNameRequest")
	proto.RegisterType((*EnvAddReply)(nil), "EnvAddReply")
	proto.RegisterType((*EnvironmentList)(nil), "EnvironmentList")
	proto.RegisterType((*EnvironmentList_EnvironmentInfo)(nil), "EnvironmentList.EnvironmentInfo")
	proto.RegisterType((*GroupAddRequest)(nil), "GroupAddRequest")
	proto.RegisterType((*GroupAddReply)(nil), "GroupAddReply")
	proto.RegisterType((*GroupNameRequest)(nil), "GroupNameRequest")
	proto.RegisterType((*GroupList)(nil), "GroupList")
	proto.RegisterType((*GroupList_GroupInfo)(nil), "GroupList.GroupInfo")
	proto.RegisterType((*ReleaseNameRequest)(nil), "ReleaseNameRequest")
	proto.RegisterType((*ReleaseIdRequest)(nil), "ReleaseIdRequest")
	proto.RegisterType((*ReleaseAddReply)(nil), "ReleaseAddReply")
	proto.RegisterType((*ReleaseCode)(nil), "ReleaseCode")
	proto.RegisterType((*AddReleaseRequest)(nil), "AddReleaseRequest")
	proto.RegisterType((*ReleaseCodeList)(nil), "ReleaseCodeList")
	proto.RegisterType((*ReleaseCodeList_ReleaseCodeInfo)(nil), "ReleaseCodeList.ReleaseCodeInfo")
	proto.RegisterType((*AgentList)(nil), "AgentList")
	proto.RegisterType((*AgentList_AgentInfo)(nil), "AgentList.AgentInfo")
	proto.RegisterType((*AgentRestartRequest)(nil), "AgentRestartRequest")
	proto.RegisterType((*AgentAliasRequest)(nil), "AgentAliasRequest")
	proto.RegisterType((*AgentGetRequest)(nil), "AgentGetRequest")
	proto.RegisterType((*ServiceAddRequest)(nil), "ServiceAddRequest")
	proto.RegisterType((*ServiceAddReply)(nil), "ServiceAddReply")
	proto.RegisterType((*ServiceDeleteRequest)(nil), "ServiceDeleteRequest")
	proto.RegisterType((*ServiceRequest)(nil), "ServiceRequest")
	proto.RegisterType((*ServiceList)(nil), "ServiceList")
	proto.RegisterType((*ServiceList_ServiceInfo)(nil), "ServiceList.ServiceInfo")
	proto.RegisterType((*ServiceChangeOwnRequest)(nil), "ServiceChangeOwnRequest")
	proto.RegisterType((*TaksNameRequest)(nil), "TaksNameRequest")
	proto.RegisterType((*TaskIdRequest)(nil), "TaskIdRequest")
	proto.RegisterType((*TaskAddRequest)(nil), "TaskAddRequest")
	proto.RegisterType((*TaskAddReply)(nil), "TaskAddReply")
	proto.RegisterType((*TaskList)(nil), "TaskList")
	proto.RegisterType((*TaskList_TaskInfo)(nil), "TaskList.TaskInfo")
	proto.RegisterType((*SpecificService)(nil), "SpecificService")
	proto.RegisterType((*TaskDetailsRequst)(nil), "TaskDetailsRequst")
	proto.RegisterType((*ExecutionList)(nil), "ExecutionList")
	proto.RegisterType((*ExecutionList_ExecutionInfo)(nil), "ExecutionList.ExecutionInfo")
	proto.RegisterType((*TaskString)(nil), "TaskString")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 1861 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xcd, 0x8f, 0xe3, 0x48,
	0x15, 0x8f, 0x9d, 0xef, 0x97, 0x2f, 0xa7, 0xa6, 0x59, 0x22, 0x6b, 0xb4, 0xb4, 0x8a, 0xa1, 0x69,
	0xb4, 0x43, 0x0d, 0x64, 0xa6, 0x17, 0xa1, 0xe5, 0xd2, 0x9a, 0x69, 0xb5, 0x46, 0xac, 0xe8, 0x55,
	0x7a, 0xb9, 0xc1, 0xc1, 0x1b, 0x57, 0x67, 0xcc, 0x24, 0xb6, 0xb1, 0x9d, 0x2c, 0x83, 0xc4, 0x09,
	0x4e, 0x20, 0x71, 0x40, 0x48, 0x70, 0x41, 0x1c, 0x38, 0xac, 0x56, 0x88, 0x3b, 0x17, 0xfe, 0x0b,
	0x2e, 0x9c, 0x11, 0xfc, 0x1d, 0xab, 0x7a, 0x55, 0x65, 0x97, 0x2b, 0x9d, 0xee, 0x91, 0xf6, 0x56,
	0xef, 0xcb, 0xf5, 0x3e, 0x7e, 0x7e, 0x55, 0xaf, 0xa0, 0x9f, 0xa5, 0x4b, 0x96, 0x66, 0x49, 0x91,
	0xd0, 0x31, 0x0c, 0x2f, 0x36, 0x69, 0xf1, 0x66, 0xc1, 0x7f, 0xbe, 0xe5, 0x79, 0x41, 0x87, 0x00,
	0x8a, 0x4e, 0xd7, 0x6f, 0xe8, 0x23, 0x18, 0x5f, 0x65, 0xab, 0x1f, 0x05, 0x1b, 0xae, 0xe4, 0x84,
	0x40, 0x2b, 0x0e, 0x36, 0x7c, 0xe6, 0x1c, 0x3b, 0xa7, 0xfd, 0x05, 0xae, 0xe9, 0xd7, 0x61, 0x70,
	0x95, 0xad, 0xce, 0xc3, 0x10, 0x8d, 0xc8, 0x11, 0xb4, 0x93, 0x6c, 0x15, 0x85, 0xa8, 0xd3, 0x5e,
	0x48, 0x82, 0xfe, 0xd9, 0x01, 0xef, 0x2a, 0x5b, 0x05, 0x71, 0xf4, 0xcb, 0xa0, 0x88, 0x92, 0xf8,
	0xc3, 0x28, 0x2f, 0xc8, 0xfb, 0xd0, 0x4a, 0xb2, 0x55, 0x3e, 0x73, 0x8e, 0x9b, 0xa7, 0x83, 0x39,
	0x65, 0xb6, 0x42, 0x8d, 0xf1, 0x32, 0xbe, 0x49, 0x16, 0xa8, 0xef, 0x7f, 0x58, 0xff, 0x96, 0x90,
	0x90, 0x31, 0xb8, 0xe5, 0x9e, 0x6e, 0x14, 0x96, 0x9e, 0xba, 0x95, 0xa7, 0xc2, 0xb5, 0x65, 0x11,
	0x6d, 0xf8, 0xac, 0x89, 0x4c, 0x49, 0xd0, 0x53, 0x20, 0x1f, 0x65, 0xc9, 0xcf, 0xf8, 0xb2, 0xb8,
	0x2f, 0xd2, 0x6f, 0xc2, 0x44, 0x69, 0x9a, 0xd1, 0xa6, 0x59, 0x52, 0x45, 0x8b, 0x04, 0xfd, 0x8d,
	0x03, 0x03, 0xa5, 0x89, 0x81, 0x3e, 0x86, 0x56, 0x9a, 0x25, 0x3a, 0xd0, 0x19, 0x33, 0x64, 0x7a,
	0x2d, 0xc3, 0x13, 0x5a, 0xfe, 0x65, 0x69, 0xfc, 0x25, 0x23, 0x7b, 0x04, 0xe3, 0x8b, 0x78, 0xf7,
	0x16, 0xf5, 0xbb, 0x88, 0x77, 0x66, 0x44, 0x3c, 0xde, 0x55, 0x11, 0x21, 0x41, 0xff, 0xe8, 0xc0,
	0xe4, 0x22, 0xde, 0x45, 0x59, 0x12, 0x6f, 0x78, 0x2c, 0xa3, 0x7a, 0x06, 0x2d, 0x1e, 0xef, 0x74,
	0x54, 0xc7, 0xcc, 0x92, 0x9b, 0xb4, 0x8c, 0x4e, 0x68, 0xfb, 0x3f, 0xac, 0x7d, 0xe8, 0x4b, 0x46,
	0xb8, 0x82, 0xc9, 0x65, 0x96, 0x6c, 0x53, 0xf4, 0xfe, 0x60, 0x88, 0x15, 0x26, 0x5d, 0x03, 0x93,
	0x55, 0xa4, 0x4d, 0x23, 0xd2, 0xaa, 0xa2, 0x2d, 0xb3, 0xa2, 0xdf, 0x82, 0x51, 0xb5, 0x91, 0x48,
	0xd3, 0x0c, 0xba, 0x2b, 0xc1, 0x28, 0x1d, 0xd7, 0x24, 0x3d, 0x01, 0x0f, 0x55, 0xef, 0xcb, 0xfb,
	0x3f, 0x1d, 0xe8, 0xa3, 0xa2, 0x82, 0x48, 0x07, 0x3f, 0xa0, 0xd3, 0x79, 0xc4, 0x4a, 0x99, 0x5c,
	0x61, 0x0a, 0x95, 0x8e, 0xff, 0x2b, 0x65, 0xfa, 0xd6, 0xe9, 0x9b, 0x41, 0x37, 0xc9, 0x56, 0xc8,
	0x96, 0x09, 0xd4, 0xa4, 0x90, 0xf0, 0x78, 0x87, 0x92, 0x96, 0x94, 0x28, 0x52, 0x48, 0xd2, 0x2c,
	0x41, 0x49, 0x5b, 0x4a, 0x14, 0x29, 0x7e, 0x99, 0x05, 0x5f, 0xf3, 0x20, 0xe7, 0xf7, 0x05, 0x49,
	0xc1, 0x53, 0x9a, 0x2f, 0xcb, 0x0a, 0x59, 0xfe, 0xd2, 0x27, 0x30, 0x51, 0x3a, 0x65, 0x76, 0x1f,
	0x42, 0x3f, 0x93, 0xac, 0x52, 0xb3, 0x62, 0xd0, 0x0b, 0x18, 0x28, 0x83, 0xe7, 0x49, 0xc8, 0x6f,
	0xad, 0x38, 0x85, 0x61, 0xc6, 0xd7, 0x41, 0x11, 0xed, 0x78, 0x1a, 0x14, 0xaf, 0x54, 0x2e, 0x6a,
	0x3c, 0xfa, 0x57, 0x07, 0xa6, 0xb8, 0x23, 0x7e, 0xea, 0x2e, 0xfc, 0xcc, 0xa0, 0xbb, 0xe3, 0x59,
	0x1e, 0x25, 0xb1, 0xfa, 0x90, 0x26, 0x2b, 0x64, 0x35, 0x2d, 0x64, 0xed, 0x63, 0x88, 0x7c, 0x07,
	0x7d, 0x12, 0x7b, 0x2d, 0x93, 0x90, 0xe7, 0xb3, 0x36, 0x16, 0x7a, 0xc8, 0x8c, 0x58, 0x16, 0x35,
	0x0d, 0xfa, 0x7b, 0xa7, 0x4c, 0x8d, 0x90, 0x22, 0x50, 0x5e, 0x58, 0x5f, 0xd1, 0x7f, 0x9f, 0xa5,
	0x67, 0xd2, 0x08, 0x9d, 0x9a, 0x95, 0x7f, 0x56, 0xfb, 0xf0, 0xdb, 0xc2, 0x88, 0xfe, 0xcf, 0x81,
	0xfe, 0xf9, 0x4a, 0x37, 0x80, 0xc7, 0xd0, 0x09, 0x04, 0x51, 0x61, 0xb6, 0x94, 0xc9, 0x95, 0xc4,
	0xac, 0xd4, 0xf1, 0x3f, 0xd7, 0xb6, 0xd6, 0x6e, 0x7d, 0xdc, 0xed, 0x08, 0xda, 0xc1, 0x3a, 0x0a,
	0x72, 0xb5, 0x9d, 0x24, 0x88, 0x0f, 0xbd, 0x57, 0x49, 0x5e, 0x18, 0xb8, 0x2d, 0x69, 0xf2, 0x0e,
	0x74, 0xc4, 0x3a, 0x4a, 0x15, 0x6e, 0x15, 0x25, 0xf8, 0x79, 0x11, 0x14, 0xdb, 0x5c, 0xa1, 0x56,
	0x51, 0x55, 0x07, 0xe9, 0x18, 0x1d, 0x44, 0x70, 0xb7, 0xc8, 0xed, 0x4a, 0x2e, 0x12, 0xf4, 0x0c,
	0x1e, 0xa0, 0xab, 0x0b, 0x9e, 0x17, 0x41, 0x56, 0xec, 0x23, 0x57, 0x3a, 0x3d, 0x06, 0x37, 0x49,
	0x95, 0xc7, 0x6e, 0x92, 0xd2, 0xef, 0xc3, 0x14, 0xcd, 0xce, 0x85, 0xf3, 0x87, 0x8c, 0x6e, 0x8d,
	0x54, 0x1c, 0x90, 0x13, 0xb4, 0xbd, 0xe4, 0xe5, 0x76, 0x0c, 0xdc, 0x60, 0x89, 0x96, 0xe3, 0xf9,
	0xbb, 0xcc, 0x92, 0x4a, 0xfa, 0xf9, 0x3a, 0xc8, 0xf3, 0xe8, 0xe6, 0xcd, 0xc2, 0x0d, 0x96, 0x66,
	0x4f, 0x72, 0xeb, 0x3d, 0xe9, 0x03, 0x18, 0xd5, 0xd4, 0x49, 0x0f, 0x5a, 0x71, 0x12, 0x73, 0xaf,
	0x41, 0x00, 0x3a, 0x49, 0xbc, 0x8e, 0x62, 0xee, 0x39, 0x64, 0x00, 0xdd, 0xe4, 0xe6, 0x06, 0x09,
	0x97, 0x74, 0xa1, 0x19, 0xac, 0xd7, 0x5e, 0x93, 0xfe, 0xc9, 0x85, 0xe9, 0x35, 0xcf, 0x76, 0xd1,
	0x92, 0xdf, 0xd3, 0x67, 0x3d, 0x68, 0x86, 0x51, 0xa6, 0x02, 0x13, 0x4b, 0xf2, 0x2e, 0xc0, 0x26,
	0xd9, 0x86, 0x6b, 0x6e, 0x94, 0xd0, 0xe0, 0x88, 0x62, 0x25, 0xf9, 0x36, 0xe7, 0x99, 0x2e, 0xa2,
	0xa4, 0xc8, 0x31, 0x0c, 0x04, 0x50, 0xd3, 0xa0, 0x28, 0x78, 0x16, 0xab, 0x4a, 0x9a, 0x2c, 0xec,
	0x4e, 0x51, 0x78, 0x13, 0xad, 0x75, 0xe9, 0x34, 0x29, 0x40, 0x83, 0x55, 0x5b, 0x6e, 0xc2, 0x59,
	0x4f, 0x82, 0x46, 0xd3, 0xc2, 0x2a, 0x2f, 0x92, 0x54, 0x88, 0xfa, 0xd2, 0x4a, 0x91, 0x42, 0x82,
	0x40, 0x8d, 0xc2, 0x19, 0x48, 0x89, 0x22, 0xcd, 0xb4, 0x0e, 0xea, 0x69, 0x7d, 0x02, 0x13, 0x33,
	0x31, 0xaa, 0x73, 0xe5, 0x92, 0x55, 0x16, 0xbd, 0x62, 0xd0, 0x13, 0x38, 0x52, 0x06, 0x2f, 0xf8,
	0x9a, 0x17, 0xfc, 0x00, 0x46, 0xe8, 0x6f, 0x1d, 0x18, 0x2b, 0x45, 0xad, 0xe2, 0x43, 0x4f, 0x6d,
	0x2b, 0x7f, 0xb7, 0xf6, 0xa2, 0xa4, 0x85, 0x4c, 0x39, 0x2b, 0x50, 0xd5, 0x14, 0x11, 0x6b, 0x5a,
	0x64, 0xb2, 0xca, 0x77, 0x3e, 0x6b, 0xa2, 0xd8, 0x64, 0x89, 0x1a, 0x95, 0x1e, 0xe6, 0xb3, 0x16,
	0x2a, 0x18, 0x1c, 0xfa, 0xeb, 0x26, 0x0c, 0x94, 0x33, 0xea, 0xdc, 0xef, 0x29, 0x69, 0x75, 0xa3,
	0x31, 0xe4, 0x7a, 0x8d, 0x3f, 0x7f, 0xa9, 0xe9, 0xff, 0xcb, 0x2d, 0xbf, 0x72, 0x6b, 0x03, 0xb8,
	0xed, 0xd4, 0x52, 0x78, 0x6a, 0x1e, 0xc2, 0x53, 0xeb, 0x0e, 0x3c, 0xb5, 0xef, 0xc2, 0x53, 0x67,
	0x1f, 0x4f, 0x04, 0x5a, 0x69, 0x92, 0x15, 0x08, 0xa6, 0xf6, 0x02, 0xd7, 0x26, 0xc6, 0x7a, 0x87,
	0x31, 0xd6, 0x3f, 0x8c, 0x31, 0xa8, 0x63, 0xec, 0x21, 0xf4, 0xb1, 0x2e, 0xe8, 0xfc, 0x50, 0x82,
	0xa3, 0x64, 0x08, 0x29, 0x56, 0x14, 0xa5, 0x23, 0x29, 0x2d, 0x19, 0xf4, 0xa7, 0xf0, 0x55, 0x95,
	0xbe, 0xe7, 0xaf, 0x82, 0x78, 0xc5, 0xaf, 0x3e, 0x8d, 0x0f, 0x75, 0x18, 0x03, 0xca, 0xee, 0x41,
	0x28, 0x37, 0xeb, 0x50, 0xfe, 0x06, 0x4c, 0x3e, 0x0e, 0x5e, 0xe7, 0xf7, 0x9d, 0xe7, 0x5f, 0x83,
	0xd1, 0xc7, 0x41, 0xfe, 0xfa, 0xf0, 0x61, 0xfe, 0x13, 0x18, 0x0b, 0x85, 0x7b, 0x1a, 0xc5, 0xc1,
	0x4e, 0x55, 0x3f, 0xf9, 0x9b, 0xf6, 0xc9, 0x7f, 0x02, 0xc3, 0xf2, 0xeb, 0xe2, 0x6f, 0x7b, 0x07,
	0x3a, 0x45, 0x90, 0xbf, 0x2e, 0x3d, 0x50, 0x14, 0xfd, 0x9d, 0x0b, 0x3d, 0xa1, 0x88, 0x78, 0x3d,
	0x85, 0xb6, 0x60, 0x6b, 0xb0, 0x12, 0xa6, 0x25, 0xb8, 0x40, 0x98, 0x4a, 0x05, 0xff, 0xdf, 0x8e,
	0x34, 0x7b, 0xeb, 0x6b, 0x55, 0x75, 0xd6, 0x48, 0x57, 0xf7, 0xce, 0x9a, 0x96, 0x79, 0xd6, 0x88,
	0xde, 0x20, 0x40, 0x82, 0x92, 0xb6, 0xea, 0x0d, 0x9a, 0x21, 0x2f, 0x62, 0xa1, 0x71, 0x42, 0x69,
	0x52, 0x80, 0x57, 0xa5, 0x00, 0x1d, 0x90, 0xed, 0xce, 0x64, 0xd5, 0xa1, 0xd3, 0xb3, 0xa1, 0xf3,
	0x99, 0x03, 0x93, 0xeb, 0x94, 0x2f, 0xa3, 0x9b, 0x68, 0xa9, 0x30, 0x74, 0x77, 0x9f, 0x12, 0xd2,
	0x24, 0xe5, 0x19, 0x8e, 0x57, 0xaa, 0x42, 0x15, 0x83, 0x3c, 0x82, 0x91, 0x71, 0x99, 0x28, 0xeb,
	0x54, 0x67, 0x92, 0x39, 0x1c, 0x2d, 0xb7, 0x79, 0x91, 0x6c, 0xb6, 0xe9, 0x2a, 0x0b, 0xaa, 0x7f,
	0x4f, 0xa6, 0xe4, 0x56, 0x19, 0xfd, 0x31, 0x4c, 0x45, 0xfe, 0x5f, 0xf0, 0x22, 0x88, 0xd6, 0x78,
	0x82, 0xe6, 0xc5, 0xa1, 0x22, 0x93, 0x53, 0xe8, 0xe4, 0xf9, 0x3a, 0xca, 0x0b, 0xec, 0x79, 0x83,
	0xb9, 0xc7, 0xac, 0x20, 0x17, 0x4a, 0x4e, 0x3f, 0x77, 0x61, 0x74, 0xf1, 0x0b, 0xbe, 0xdc, 0x96,
	0xa3, 0xe7, 0x0f, 0x00, 0xb8, 0x66, 0x68, 0x60, 0x3c, 0x64, 0x35, 0x9d, 0x8a, 0x42, 0x88, 0x18,
	0xfa, 0xfe, 0x7f, 0x1c, 0xe3, 0x7b, 0x08, 0x16, 0x1f, 0x7a, 0xc2, 0x2b, 0x03, 0xe8, 0x25, 0xad,
	0x80, 0xe4, 0x96, 0x40, 0x3a, 0x86, 0x81, 0xca, 0xb4, 0x71, 0x28, 0x9a, 0xac, 0x7a, 0xfa, 0x5b,
	0x76, 0xfa, 0x8f, 0xa0, 0x9d, 0x89, 0x1c, 0x23, 0x84, 0xda, 0x0b, 0x49, 0x08, 0x78, 0x66, 0x9b,
	0x7c, 0xa5, 0xb0, 0x83, 0xeb, 0x83, 0x25, 0xe8, 0xde, 0x51, 0x82, 0x13, 0x00, 0x51, 0x82, 0xeb,
	0x22, 0x8b, 0xe2, 0x95, 0x00, 0x25, 0xfe, 0x1a, 0x45, 0xa6, 0xc2, 0xd2, 0xe4, 0xfc, 0xff, 0x0e,
	0x0c, 0xcd, 0x29, 0x9c, 0xcc, 0x61, 0x72, 0x1e, 0x86, 0x35, 0xd6, 0x84, 0xd5, 0xdf, 0x0f, 0xfc,
	0x21, 0x33, 0x9e, 0x0a, 0x68, 0x83, 0x3c, 0x03, 0x22, 0x0f, 0xc2, 0xbb, 0xcd, 0x06, 0xcc, 0x78,
	0x95, 0x68, 0x90, 0xf7, 0xc1, 0xbb, 0xe4, 0x85, 0x69, 0x92, 0x93, 0x11, 0x33, 0x1f, 0x32, 0xfc,
	0xe9, 0xde, 0x63, 0x02, 0xee, 0x36, 0xb5, 0xec, 0x5e, 0xbe, 0xb8, 0xd7, 0xc7, 0xf9, 0xdf, 0x1c,
	0xe8, 0xaa, 0x79, 0x9c, 0x9c, 0x01, 0x9c, 0x87, 0xa1, 0xa6, 0x1e, 0xb0, 0xfd, 0x87, 0x03, 0xdf,
	0x63, 0xd6, 0x1b, 0x01, 0x6d, 0x90, 0xa7, 0x30, 0x92, 0x61, 0xde, 0x69, 0x69, 0x45, 0xf9, 0x18,
	0x06, 0x97, 0xbc, 0x50, 0x7a, 0x7b, 0x01, 0x0e, 0xcd, 0x47, 0x04, 0xda, 0x98, 0xff, 0xdd, 0xc1,
	0x31, 0x5e, 0xcf, 0xd5, 0xe4, 0xbb, 0x30, 0x3e, 0x0f, 0x43, 0x93, 0x33, 0x61, 0xf5, 0xc7, 0x00,
	0x7f, 0xc8, 0x8c, 0xb9, 0x1f, 0xbd, 0x9c, 0x4a, 0x2f, 0xef, 0xb4, 0xb2, 0xbc, 0x7c, 0x06, 0x93,
	0x4b, 0x5e, 0x18, 0x16, 0x7b, 0x9e, 0x7a, 0xf6, 0xc3, 0x00, 0x6d, 0xcc, 0xff, 0xe0, 0x40, 0x1b,
	0x07, 0x58, 0xc2, 0xa0, 0x77, 0x1e, 0x86, 0x72, 0xed, 0x31, 0x6b, 0x98, 0xf7, 0xc7, 0xac, 0x36,
	0x75, 0xd3, 0x06, 0x79, 0x02, 0x03, 0xe9, 0xa4, 0x34, 0x99, 0x32, 0x7b, 0xd6, 0xb6, 0x1d, 0x3c,
	0x85, 0xfe, 0x25, 0x2f, 0x50, 0x6b, 0xcf, 0x35, 0xa8, 0x86, 0x6c, 0xda, 0x98, 0xff, 0xc3, 0x81,
	0xae, 0x1a, 0x8a, 0xc8, 0x33, 0x2c, 0xb4, 0xa6, 0x08, 0xdb, 0x9b, 0x13, 0x7d, 0x8f, 0x59, 0x43,
	0xab, 0x59, 0x67, 0x6d, 0xf8, 0x80, 0xed, 0xcf, 0xc9, 0xb6, 0x83, 0xdf, 0x83, 0x31, 0xde, 0xea,
	0xab, 0x81, 0x76, 0xca, 0xec, 0x99, 0xb9, 0xda, 0x4d, 0xcf, 0x77, 0xb4, 0x31, 0xff, 0x8b, 0x03,
	0x6d, 0xbc, 0xd5, 0x93, 0xf7, 0x30, 0x46, 0x5c, 0xe7, 0xc4, 0xb3, 0x27, 0x05, 0x1f, 0xaa, 0xb9,
	0x8c, 0x36, 0xc8, 0x1c, 0x46, 0xd7, 0x4a, 0x19, 0xe7, 0x14, 0x11, 0x9d, 0x3d, 0xb4, 0xd8, 0x3e,
	0x3e, 0x85, 0xe1, 0x15, 0xf6, 0x1f, 0x2e, 0x37, 0x54, 0x93, 0x5e, 0x7d, 0x3c, 0xb2, 0x8c, 0xe6,
	0xff, 0x75, 0xa0, 0xab, 0x8f, 0x1b, 0x99, 0x4f, 0x4d, 0x11, 0xb6, 0x37, 0x4f, 0xf8, 0x1e, 0xb3,
	0xae, 0xd2, 0xb4, 0x41, 0xce, 0x74, 0x3e, 0xb5, 0xe1, 0x57, 0xd8, 0x6d, 0xd7, 0x67, 0xdb, 0x5b,
	0x86, 0x7f, 0x8e, 0xd2, 0xcc, 0xc9, 0x84, 0xd5, 0xaf, 0xd2, 0xfe, 0xd0, 0xbc, 0xae, 0xd2, 0x06,
	0xf9, 0x00, 0x3c, 0x79, 0xa7, 0x52, 0xec, 0xab, 0x4f, 0x63, 0x52, 0x5e, 0x69, 0xed, 0xdb, 0x96,
	0x1d, 0xe5, 0x67, 0x2e, 0xb4, 0x44, 0x4f, 0x24, 0xef, 0x41, 0xf7, 0x3c, 0x0c, 0x45, 0xef, 0x24,
	0x13, 0x56, 0xbf, 0x03, 0xf9, 0x23, 0x66, 0x5e, 0x5b, 0x68, 0x83, 0x7c, 0x1b, 0x40, 0x86, 0x80,
	0xfa, 0x1e, 0xb3, 0xee, 0x5e, 0x76, 0x44, 0x27, 0xd0, 0xbb, 0xe4, 0x85, 0xd0, 0xdd, 0xc3, 0x70,
	0xbf, 0xbc, 0xce, 0x60, 0x9d, 0xc6, 0xd7, 0x52, 0x4f, 0x1d, 0xa1, 0x44, 0xde, 0x76, 0x6a, 0x07,
	0xaa, 0xfd, 0xf1, 0x33, 0x6c, 0x8b, 0x42, 0xad, 0x3c, 0xd3, 0x72, 0x32, 0x66, 0xb5, 0x7b, 0x9e,
	0x3f, 0xae, 0x1f, 0x8e, 0xf2, 0x4f, 0xfc, 0x68, 0xfb, 0xc9, 0x3a, 0xca, 0x5f, 0x61, 0x0c, 0xf7,
	0x1a, 0x7c, 0xd2, 0xc1, 0x37, 0xe7, 0xa7, 0x5f, 0x04, 0x00, 0x00, 0xff, 0xff, 0x58, 0xa7, 0x77,
	0x16, 0x80, 0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrganizationClient is the client API for Organization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrganizationClient interface {
	AddOrganization(ctx context.Context, in *OrgNameRequest, opts ...grpc.CallOption) (*OrgAddReply, error)
	DeleteOrganization(ctx context.Context, in *OrgNameRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	GetOrganizations(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*OrganizationList, error)
	GetOrganizationID(ctx context.Context, in *OrgNameRequest, opts ...grpc.CallOption) (*OrgAddReply, error)
}

type organizationClient struct {
	cc *grpc.ClientConn
}

func NewOrganizationClient(cc *grpc.ClientConn) OrganizationClient {
	return &organizationClient{cc}
}

func (c *organizationClient) AddOrganization(ctx context.Context, in *OrgNameRequest, opts ...grpc.CallOption) (*OrgAddReply, error) {
	out := new(OrgAddReply)
	err := c.cc.Invoke(ctx, "/Organization/AddOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteOrganization(ctx context.Context, in *OrgNameRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Organization/DeleteOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetOrganizations(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*OrganizationList, error) {
	out := new(OrganizationList)
	err := c.cc.Invoke(ctx, "/Organization/GetOrganizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetOrganizationID(ctx context.Context, in *OrgNameRequest, opts ...grpc.CallOption) (*OrgAddReply, error) {
	out := new(OrgAddReply)
	err := c.cc.Invoke(ctx, "/Organization/GetOrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrganizationServer is the server API for Organization service.
type OrganizationServer interface {
	AddOrganization(context.Context, *OrgNameRequest) (*OrgAddReply, error)
	DeleteOrganization(context.Context, *OrgNameRequest) (*EmptyReply, error)
	GetOrganizations(context.Context, *EmptyRequest) (*OrganizationList, error)
	GetOrganizationID(context.Context, *OrgNameRequest) (*OrgAddReply, error)
}

// UnimplementedOrganizationServer can be embedded to have forward compatible implementations.
type UnimplementedOrganizationServer struct {
}

func (*UnimplementedOrganizationServer) AddOrganization(ctx context.Context, req *OrgNameRequest) (*OrgAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrganization not implemented")
}
func (*UnimplementedOrganizationServer) DeleteOrganization(ctx context.Context, req *OrgNameRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOrganization not implemented")
}
func (*UnimplementedOrganizationServer) GetOrganizations(ctx context.Context, req *EmptyRequest) (*OrganizationList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizations not implemented")
}
func (*UnimplementedOrganizationServer) GetOrganizationID(ctx context.Context, req *OrgNameRequest) (*OrgAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationID not implemented")
}

func RegisterOrganizationServer(s *grpc.Server, srv OrganizationServer) {
	s.RegisterService(&_Organization_serviceDesc, srv)
}

func _Organization_AddOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrgNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).AddOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Organization/AddOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).AddOrganization(ctx, req.(*OrgNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrgNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Organization/DeleteOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteOrganization(ctx, req.(*OrgNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Organization/GetOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetOrganizations(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetOrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrgNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetOrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Organization/GetOrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetOrganizationID(ctx, req.(*OrgNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Organization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Organization",
	HandlerType: (*OrganizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddOrganization",
			Handler:    _Organization_AddOrganization_Handler,
		},
		{
			MethodName: "DeleteOrganization",
			Handler:    _Organization_DeleteOrganization_Handler,
		},
		{
			MethodName: "GetOrganizations",
			Handler:    _Organization_GetOrganizations_Handler,
		},
		{
			MethodName: "GetOrganizationID",
			Handler:    _Organization_GetOrganizationID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// ProjectClient is the client API for Project service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectClient interface {
	AddProject(ctx context.Context, in *ProjectNameRequest, opts ...grpc.CallOption) (*ProjectAddReply, error)
	DeleteProject(ctx context.Context, in *ProjectNameRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	GetProjects(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ProjectList, error)
}

type projectClient struct {
	cc *grpc.ClientConn
}

func NewProjectClient(cc *grpc.ClientConn) ProjectClient {
	return &projectClient{cc}
}

func (c *projectClient) AddProject(ctx context.Context, in *ProjectNameRequest, opts ...grpc.CallOption) (*ProjectAddReply, error) {
	out := new(ProjectAddReply)
	err := c.cc.Invoke(ctx, "/Project/AddProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) DeleteProject(ctx context.Context, in *ProjectNameRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Project/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) GetProjects(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ProjectList, error) {
	out := new(ProjectList)
	err := c.cc.Invoke(ctx, "/Project/GetProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServer is the server API for Project service.
type ProjectServer interface {
	AddProject(context.Context, *ProjectNameRequest) (*ProjectAddReply, error)
	DeleteProject(context.Context, *ProjectNameRequest) (*EmptyReply, error)
	GetProjects(context.Context, *EmptyRequest) (*ProjectList, error)
}

// UnimplementedProjectServer can be embedded to have forward compatible implementations.
type UnimplementedProjectServer struct {
}

func (*UnimplementedProjectServer) AddProject(ctx context.Context, req *ProjectNameRequest) (*ProjectAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProject not implemented")
}
func (*UnimplementedProjectServer) DeleteProject(ctx context.Context, req *ProjectNameRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedProjectServer) GetProjects(ctx context.Context, req *EmptyRequest) (*ProjectList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjects not implemented")
}

func RegisterProjectServer(s *grpc.Server, srv ProjectServer) {
	s.RegisterService(&_Project_serviceDesc, srv)
}

func _Project_AddProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProjectNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).AddProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Project/AddProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).AddProject(ctx, req.(*ProjectNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProjectNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Project/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).DeleteProject(ctx, req.(*ProjectNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_GetProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).GetProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Project/GetProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).GetProjects(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Project_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Project",
	HandlerType: (*ProjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddProject",
			Handler:    _Project_AddProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _Project_DeleteProject_Handler,
		},
		{
			MethodName: "GetProjects",
			Handler:    _Project_GetProjects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// EnvironmentClient is the client API for Environment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EnvironmentClient interface {
	AddEnvironment(ctx context.Context, in *EnvNameRequest, opts ...grpc.CallOption) (*EnvAddReply, error)
	DeleteEnvironment(ctx context.Context, in *EnvNameRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	GetEnvironments(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*EnvironmentList, error)
}

type environmentClient struct {
	cc *grpc.ClientConn
}

func NewEnvironmentClient(cc *grpc.ClientConn) EnvironmentClient {
	return &environmentClient{cc}
}

func (c *environmentClient) AddEnvironment(ctx context.Context, in *EnvNameRequest, opts ...grpc.CallOption) (*EnvAddReply, error) {
	out := new(EnvAddReply)
	err := c.cc.Invoke(ctx, "/Environment/AddEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentClient) DeleteEnvironment(ctx context.Context, in *EnvNameRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Environment/DeleteEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentClient) GetEnvironments(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*EnvironmentList, error) {
	out := new(EnvironmentList)
	err := c.cc.Invoke(ctx, "/Environment/GetEnvironments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnvironmentServer is the server API for Environment service.
type EnvironmentServer interface {
	AddEnvironment(context.Context, *EnvNameRequest) (*EnvAddReply, error)
	DeleteEnvironment(context.Context, *EnvNameRequest) (*EmptyReply, error)
	GetEnvironments(context.Context, *EmptyRequest) (*EnvironmentList, error)
}

// UnimplementedEnvironmentServer can be embedded to have forward compatible implementations.
type UnimplementedEnvironmentServer struct {
}

func (*UnimplementedEnvironmentServer) AddEnvironment(ctx context.Context, req *EnvNameRequest) (*EnvAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEnvironment not implemented")
}
func (*UnimplementedEnvironmentServer) DeleteEnvironment(ctx context.Context, req *EnvNameRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEnvironment not implemented")
}
func (*UnimplementedEnvironmentServer) GetEnvironments(ctx context.Context, req *EmptyRequest) (*EnvironmentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnvironments not implemented")
}

func RegisterEnvironmentServer(s *grpc.Server, srv EnvironmentServer) {
	s.RegisterService(&_Environment_serviceDesc, srv)
}

func _Environment_AddEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnvNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServer).AddEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environment/AddEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServer).AddEnvironment(ctx, req.(*EnvNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Environment_DeleteEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnvNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServer).DeleteEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environment/DeleteEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServer).DeleteEnvironment(ctx, req.(*EnvNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Environment_GetEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServer).GetEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environment/GetEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServer).GetEnvironments(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Environment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Environment",
	HandlerType: (*EnvironmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEnvironment",
			Handler:    _Environment_AddEnvironment_Handler,
		},
		{
			MethodName: "DeleteEnvironment",
			Handler:    _Environment_DeleteEnvironment_Handler,
		},
		{
			MethodName: "GetEnvironments",
			Handler:    _Environment_GetEnvironments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// GroupClient is the client API for Group service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupClient interface {
	AddGroup(ctx context.Context, in *GroupAddRequest, opts ...grpc.CallOption) (*GroupAddReply, error)
	DeleteGroup(ctx context.Context, in *GroupNameRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	GetGroups(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GroupList, error)
}

type groupClient struct {
	cc *grpc.ClientConn
}

func NewGroupClient(cc *grpc.ClientConn) GroupClient {
	return &groupClient{cc}
}

func (c *groupClient) AddGroup(ctx context.Context, in *GroupAddRequest, opts ...grpc.CallOption) (*GroupAddReply, error) {
	out := new(GroupAddReply)
	err := c.cc.Invoke(ctx, "/Group/AddGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) DeleteGroup(ctx context.Context, in *GroupNameRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Group/DeleteGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupClient) GetGroups(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GroupList, error) {
	out := new(GroupList)
	err := c.cc.Invoke(ctx, "/Group/GetGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupServer is the server API for Group service.
type GroupServer interface {
	AddGroup(context.Context, *GroupAddRequest) (*GroupAddReply, error)
	DeleteGroup(context.Context, *GroupNameRequest) (*EmptyReply, error)
	GetGroups(context.Context, *EmptyRequest) (*GroupList, error)
}

// UnimplementedGroupServer can be embedded to have forward compatible implementations.
type UnimplementedGroupServer struct {
}

func (*UnimplementedGroupServer) AddGroup(ctx context.Context, req *GroupAddRequest) (*GroupAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGroup not implemented")
}
func (*UnimplementedGroupServer) DeleteGroup(ctx context.Context, req *GroupNameRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGroup not implemented")
}
func (*UnimplementedGroupServer) GetGroups(ctx context.Context, req *EmptyRequest) (*GroupList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroups not implemented")
}

func RegisterGroupServer(s *grpc.Server, srv GroupServer) {
	s.RegisterService(&_Group_serviceDesc, srv)
}

func _Group_AddGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).AddGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Group/AddGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).AddGroup(ctx, req.(*GroupAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_DeleteGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).DeleteGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Group/DeleteGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).DeleteGroup(ctx, req.(*GroupNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Group_GetGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServer).GetGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Group/GetGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServer).GetGroups(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Group_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Group",
	HandlerType: (*GroupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddGroup",
			Handler:    _Group_AddGroup_Handler,
		},
		{
			MethodName: "DeleteGroup",
			Handler:    _Group_DeleteGroup_Handler,
		},
		{
			MethodName: "GetGroups",
			Handler:    _Group_GetGroups_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// ReleaseClient is the client API for Release service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReleaseClient interface {
	AddRelease(ctx context.Context, in *AddReleaseRequest, opts ...grpc.CallOption) (*ReleaseAddReply, error)
	DeleteRelease(ctx context.Context, in *ReleaseNameRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	GetReleaseCode(ctx context.Context, in *ReleaseIdRequest, opts ...grpc.CallOption) (*ReleaseCodeList, error)
}

type releaseClient struct {
	cc *grpc.ClientConn
}

func NewReleaseClient(cc *grpc.ClientConn) ReleaseClient {
	return &releaseClient{cc}
}

func (c *releaseClient) AddRelease(ctx context.Context, in *AddReleaseRequest, opts ...grpc.CallOption) (*ReleaseAddReply, error) {
	out := new(ReleaseAddReply)
	err := c.cc.Invoke(ctx, "/Release/AddRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *releaseClient) DeleteRelease(ctx context.Context, in *ReleaseNameRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Release/DeleteRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *releaseClient) GetReleaseCode(ctx context.Context, in *ReleaseIdRequest, opts ...grpc.CallOption) (*ReleaseCodeList, error) {
	out := new(ReleaseCodeList)
	err := c.cc.Invoke(ctx, "/Release/GetReleaseCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReleaseServer is the server API for Release service.
type ReleaseServer interface {
	AddRelease(context.Context, *AddReleaseRequest) (*ReleaseAddReply, error)
	DeleteRelease(context.Context, *ReleaseNameRequest) (*EmptyReply, error)
	GetReleaseCode(context.Context, *ReleaseIdRequest) (*ReleaseCodeList, error)
}

// UnimplementedReleaseServer can be embedded to have forward compatible implementations.
type UnimplementedReleaseServer struct {
}

func (*UnimplementedReleaseServer) AddRelease(ctx context.Context, req *AddReleaseRequest) (*ReleaseAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRelease not implemented")
}
func (*UnimplementedReleaseServer) DeleteRelease(ctx context.Context, req *ReleaseNameRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRelease not implemented")
}
func (*UnimplementedReleaseServer) GetReleaseCode(ctx context.Context, req *ReleaseIdRequest) (*ReleaseCodeList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleaseCode not implemented")
}

func RegisterReleaseServer(s *grpc.Server, srv ReleaseServer) {
	s.RegisterService(&_Release_serviceDesc, srv)
}

func _Release_AddRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReleaseServer).AddRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Release/AddRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReleaseServer).AddRelease(ctx, req.(*AddReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Release_DeleteRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReleaseServer).DeleteRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Release/DeleteRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReleaseServer).DeleteRelease(ctx, req.(*ReleaseNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Release_GetReleaseCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReleaseServer).GetReleaseCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Release/GetReleaseCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReleaseServer).GetReleaseCode(ctx, req.(*ReleaseIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Release_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Release",
	HandlerType: (*ReleaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRelease",
			Handler:    _Release_AddRelease_Handler,
		},
		{
			MethodName: "DeleteRelease",
			Handler:    _Release_DeleteRelease_Handler,
		},
		{
			MethodName: "GetReleaseCode",
			Handler:    _Release_GetReleaseCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	GetAgents(ctx context.Context, in *AgentGetRequest, opts ...grpc.CallOption) (*AgentList, error)
	SetAgentAlias(ctx context.Context, in *AgentAliasRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	OperateAgent(ctx context.Context, in *AgentRestartRequest, opts ...grpc.CallOption) (*EmptyReply, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) GetAgents(ctx context.Context, in *AgentGetRequest, opts ...grpc.CallOption) (*AgentList, error) {
	out := new(AgentList)
	err := c.cc.Invoke(ctx, "/Agent/GetAgents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) SetAgentAlias(ctx context.Context, in *AgentAliasRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Agent/SetAgentAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) OperateAgent(ctx context.Context, in *AgentRestartRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Agent/OperateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	GetAgents(context.Context, *AgentGetRequest) (*AgentList, error)
	SetAgentAlias(context.Context, *AgentAliasRequest) (*EmptyReply, error)
	OperateAgent(context.Context, *AgentRestartRequest) (*EmptyReply, error)
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) GetAgents(ctx context.Context, req *AgentGetRequest) (*AgentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgents not implemented")
}
func (*UnimplementedAgentServer) SetAgentAlias(ctx context.Context, req *AgentAliasRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAgentAlias not implemented")
}
func (*UnimplementedAgentServer) OperateAgent(ctx context.Context, req *AgentRestartRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OperateAgent not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_GetAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/GetAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetAgents(ctx, req.(*AgentGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_SetAgentAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).SetAgentAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/SetAgentAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).SetAgentAlias(ctx, req.(*AgentAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_OperateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentRestartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).OperateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/OperateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).OperateAgent(ctx, req.(*AgentRestartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAgents",
			Handler:    _Agent_GetAgents_Handler,
		},
		{
			MethodName: "SetAgentAlias",
			Handler:    _Agent_SetAgentAlias_Handler,
		},
		{
			MethodName: "OperateAgent",
			Handler:    _Agent_OperateAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	AddService(ctx context.Context, in *ServiceAddRequest, opts ...grpc.CallOption) (*ServiceAddReply, error)
	DeleteService(ctx context.Context, in *ServiceDeleteRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	GetServices(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceList, error)
	ChangeServiceOwn(ctx context.Context, in *ServiceChangeOwnRequest, opts ...grpc.CallOption) (*EmptyReply, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) AddService(ctx context.Context, in *ServiceAddRequest, opts ...grpc.CallOption) (*ServiceAddReply, error) {
	out := new(ServiceAddReply)
	err := c.cc.Invoke(ctx, "/Service/AddService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) DeleteService(ctx context.Context, in *ServiceDeleteRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Service/DeleteService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetServices(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceList, error) {
	out := new(ServiceList)
	err := c.cc.Invoke(ctx, "/Service/GetServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ChangeServiceOwn(ctx context.Context, in *ServiceChangeOwnRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/Service/ChangeServiceOwn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	AddService(context.Context, *ServiceAddRequest) (*ServiceAddReply, error)
	DeleteService(context.Context, *ServiceDeleteRequest) (*EmptyReply, error)
	GetServices(context.Context, *ServiceRequest) (*ServiceList, error)
	ChangeServiceOwn(context.Context, *ServiceChangeOwnRequest) (*EmptyReply, error)
}

// UnimplementedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServer struct {
}

func (*UnimplementedServiceServer) AddService(ctx context.Context, req *ServiceAddRequest) (*ServiceAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddService not implemented")
}
func (*UnimplementedServiceServer) DeleteService(ctx context.Context, req *ServiceDeleteRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteService not implemented")
}
func (*UnimplementedServiceServer) GetServices(ctx context.Context, req *ServiceRequest) (*ServiceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServices not implemented")
}
func (*UnimplementedServiceServer) ChangeServiceOwn(ctx context.Context, req *ServiceChangeOwnRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeServiceOwn not implemented")
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_AddService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).AddService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/AddService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).AddService(ctx, req.(*ServiceAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_DeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).DeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/DeleteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).DeleteService(ctx, req.(*ServiceDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/GetServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetServices(ctx, req.(*ServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_ChangeServiceOwn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceChangeOwnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).ChangeServiceOwn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/ChangeServiceOwn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).ChangeServiceOwn(ctx, req.(*ServiceChangeOwnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddService",
			Handler:    _Service_AddService_Handler,
		},
		{
			MethodName: "DeleteService",
			Handler:    _Service_DeleteService_Handler,
		},
		{
			MethodName: "GetServices",
			Handler:    _Service_GetServices_Handler,
		},
		{
			MethodName: "ChangeServiceOwn",
			Handler:    _Service_ChangeServiceOwn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// TaskClient is the client API for Task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskClient interface {
	AddTask(ctx context.Context, in *TaskAddRequest, opts ...grpc.CallOption) (*TaskAddReply, error)
	DeleteTask(ctx context.Context, in *TaksNameRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	GetTasks(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*TaskList, error)
	SetTaskDetails(ctx context.Context, in *TaskDetailsRequst, opts ...grpc.CallOption) (*EmptyReply, error)
	GetTaskExecutions(ctx context.Context, in *TaskIdRequest, opts ...grpc.CallOption) (*ExecutionList, error)
	PublishTask(ctx context.Context, in *TaskIdRequest, opts ...grpc.CallOption) (*ExecutionList, error)
}

type taskClient struct {
	cc *grpc.ClientConn
}

func NewTaskClient(cc *grpc.ClientConn) TaskClient {
	return &taskClient{cc}
}

func (c *taskClient) AddTask(ctx context.Context, in *TaskAddRequest, opts ...grpc.CallOption) (*TaskAddReply, error) {
	out := new(TaskAddReply)
	err := c.cc.Invoke(ctx, "/task/AddTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) DeleteTask(ctx context.Context, in *TaksNameRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/task/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) GetTasks(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*TaskList, error) {
	out := new(TaskList)
	err := c.cc.Invoke(ctx, "/task/GetTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) SetTaskDetails(ctx context.Context, in *TaskDetailsRequst, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/task/SetTaskDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) GetTaskExecutions(ctx context.Context, in *TaskIdRequest, opts ...grpc.CallOption) (*ExecutionList, error) {
	out := new(ExecutionList)
	err := c.cc.Invoke(ctx, "/task/GetTaskExecutions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) PublishTask(ctx context.Context, in *TaskIdRequest, opts ...grpc.CallOption) (*ExecutionList, error) {
	out := new(ExecutionList)
	err := c.cc.Invoke(ctx, "/task/PublishTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServer is the server API for Task service.
type TaskServer interface {
	AddTask(context.Context, *TaskAddRequest) (*TaskAddReply, error)
	DeleteTask(context.Context, *TaksNameRequest) (*EmptyReply, error)
	GetTasks(context.Context, *EmptyRequest) (*TaskList, error)
	SetTaskDetails(context.Context, *TaskDetailsRequst) (*EmptyReply, error)
	GetTaskExecutions(context.Context, *TaskIdRequest) (*ExecutionList, error)
	PublishTask(context.Context, *TaskIdRequest) (*ExecutionList, error)
}

// UnimplementedTaskServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServer struct {
}

func (*UnimplementedTaskServer) AddTask(ctx context.Context, req *TaskAddRequest) (*TaskAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTask not implemented")
}
func (*UnimplementedTaskServer) DeleteTask(ctx context.Context, req *TaksNameRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedTaskServer) GetTasks(ctx context.Context, req *EmptyRequest) (*TaskList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTasks not implemented")
}
func (*UnimplementedTaskServer) SetTaskDetails(ctx context.Context, req *TaskDetailsRequst) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTaskDetails not implemented")
}
func (*UnimplementedTaskServer) GetTaskExecutions(ctx context.Context, req *TaskIdRequest) (*ExecutionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskExecutions not implemented")
}
func (*UnimplementedTaskServer) PublishTask(ctx context.Context, req *TaskIdRequest) (*ExecutionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishTask not implemented")
}

func RegisterTaskServer(s *grpc.Server, srv TaskServer) {
	s.RegisterService(&_Task_serviceDesc, srv)
}

func _Task_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).AddTask(ctx, req.(*TaskAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaksNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).DeleteTask(ctx, req.(*TaksNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_GetTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).GetTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task/GetTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).GetTasks(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_SetTaskDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskDetailsRequst)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).SetTaskDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task/SetTaskDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).SetTaskDetails(ctx, req.(*TaskDetailsRequst))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_GetTaskExecutions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).GetTaskExecutions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task/GetTaskExecutions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).GetTaskExecutions(ctx, req.(*TaskIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_PublishTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).PublishTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task/PublishTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).PublishTask(ctx, req.(*TaskIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Task_serviceDesc = grpc.ServiceDesc{
	ServiceName: "task",
	HandlerType: (*TaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _Task_AddTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _Task_DeleteTask_Handler,
		},
		{
			MethodName: "GetTasks",
			Handler:    _Task_GetTasks_Handler,
		},
		{
			MethodName: "SetTaskDetails",
			Handler:    _Task_SetTaskDetails_Handler,
		},
		{
			MethodName: "GetTaskExecutions",
			Handler:    _Task_GetTaskExecutions_Handler,
		},
		{
			MethodName: "PublishTask",
			Handler:    _Task_PublishTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
