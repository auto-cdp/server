syntax = "proto3";

//--------------comm---------------
// 空message请求
message EmptyRequest {
}
// 空message响应
message EmptyReply {
}
//--------------comm-------------------

//--------------org-------------------
//
message OrgNameRequest{
    string name = 1;
}

message OrgAddReply {
    int32 orgid = 1;
}

// 获取组织信息列表
message OrganizationList {
    message OrganizationInfo {
        int32 id = 1;
        string name = 2;
        string ctime = 3;
    }
    repeated OrganizationInfo orgs = 1;
}

// 获取组织信息请求
message GetOrgRequest {
    repeated string Names = 1;
    repeated int32 ids = 2;
}


service Organization {
    rpc AddOrganization (OrgNameRequest) returns (OrgAddReply) {}
    rpc DeleteOrganization (OrgNameRequest) returns (EmptyReply) {}
    rpc GetOrganizations (GetOrgRequest) returns (OrganizationList) {}
}
//----------------------------project--------------------------------
message ProjectNameRequest{
    string name = 1;
}

message ProjectAddReply{
    int32 proid = 1;
}

// 获取项目列表
message ProjectList {
    message ProjectInfo {
        int32 id = 1;
        string name = 2;
        string ctime = 3;
    }
    repeated ProjectInfo pros = 1;
}

// 获取项目信息请求
message GetProRequest {
    repeated string Names = 1;
    repeated int32 ids = 2;
}

service Project {
    rpc AddProject (ProjectNameRequest) returns (ProjectAddReply) {}
    rpc DeleteProject (ProjectNameRequest) returns (EmptyReply) {}
    rpc GetProjects (GetProRequest) returns (ProjectList) {}
//    rpc GetProjectID(ProjectNameRequest) returns (ProjectAddReply) {}
}
//---------------------------------env-------------------------------------
message EnvNameRequest{
    string name = 1;
}

message EnvAddReply{
    int32 envid = 1;
}
// 获取环境列表
message EnvironmentList {
    message EnvironmentInfo {
        int32 id = 1;
        string name = 2;
        string ctime = 3;
    }
    repeated EnvironmentInfo envs = 1;
}

// 获取环境信息请求
message GetEnvRequest {
    repeated string Names = 1;
    repeated int32 ids = 2;
}

service Environment {
    rpc AddEnvironment (EnvNameRequest) returns (EnvAddReply) {}
    rpc DeleteEnvironment (EnvNameRequest) returns (EmptyReply) {}
    rpc GetEnvironments (GetEnvRequest) returns (EnvironmentList) {}
}

//----------------------------group--------------------------------
// 添加分组
message GroupAddRequest {
    string name = 1; // 分组名称
    int32 orgid = 2; // 组织ID
    int32 envid = 3; // 环境ID
    int32 proid = 4; // 项目ID
}

message GroupAddReply{
    int32 groupid = 1;
}

message GroupNameRequest{
    string name = 1;
}

// 获取分组列表
message GroupList {
    message GroupInfo {
        int32 id = 1;
        string name = 2;
        string orgname = 3;
        string envname = 4;
        string proname = 5;
    }
    repeated GroupInfo groups = 1;
}

// 获取分组信息请求
message GetGroupRequest {
    repeated string Names = 1;
    repeated int32 Ids = 2;
    repeated string Orgs = 3;
    repeated string Envs = 4;
    repeated string Pros = 5;
}

// 根据group名称获取agentid请求
message GetAgentFromGroupRequest{
    repeated string groupNames = 1;
}
// 根据group名称获取agentid响应
message GroupAgentIds{
    repeated string agentid = 1;
}


service Group {
    rpc AddGroup (GroupAddRequest) returns (GroupAddReply) {}
    rpc DeleteGroup (GroupNameRequest) returns (EmptyReply) {}
    rpc GetGroups (GetGroupRequest) returns (GroupList) {}
    rpc GetAgentIdFromGroup (GetAgentFromGroupRequest) returns (GroupAgentIds){}
}

//-----------------------------release--------------------------
message ReleaseNameRequest{
    string name = 1;
}

message ReleaseIdRequest{
    int32 id = 1;
}

message ReleaseAddReply{
    int32 releaseid = 1;
}

// 发布代码,添加发布时使用
message ReleaseCode {
    string name = 1;
    string relativepath = 2;

}

// 查询发布返回结果使用
message QueryReleaseCode{
    ReleaseCode rc = 1;
    int32 id = 3;    // 查询用
    int32 releaseid = 4; // 查询用
}

// 添加发布请求
message AddReleaseRequest {
    string name = 1; // 发布名称
    string version = 2; // 发布版本
    int32 orgid = 3; // 组织ID
    int32 proid = 4; // 项目ID
    repeated ReleaseCode releasecodes = 5; // 发布代码
}

// 获取发布请求
message GetReleaseRequest {
    repeated int32 Ids = 1;
    repeated string Names = 2;
    repeated string Orgs = 3;
    repeated string Pros = 4;
}

// 发布响应
message ReleaseList {
    message ReleaseInfo {
        int32 id = 1;
        string name = 2;
        string version = 3;
        string orgname = 4;
        string proname = 5;
        repeated QueryReleaseCode rcs = 6;
    }
    repeated ReleaseInfo releases = 1;
}

// 查询发布代码请求
message GetReleaseCodeRequest{
    repeated int32 releaseids = 1;
}

// 查询发布代码响应
message ReleaseCodeList{
    repeated QueryReleaseCode rcs = 1;
}

message SetReleaseCodeRequest {
    int32 releaseID = 1;
    repeated ReleaseCode releaseCodes = 2;
}

service Release {
    rpc AddRelease (AddReleaseRequest) returns (ReleaseAddReply) {}
    rpc DeleteRelease (ReleaseNameRequest) returns (EmptyReply) {}
    rpc GetReleases(GetReleaseRequest) returns(ReleaseList){}
    rpc SetReleaseCode(SetReleaseCodeRequest) returns(EmptyReply){}
    rpc GetReleaseCodes(GetReleaseCodeRequest) returns(ReleaseCodeList){}
}

//-------------------------------------Agent------------------------
// Agent
message AgentList {
    message AgentInfo {
        string id = 1;
        string alias = 2;
        string hostname = 3;
        string hostip = 4;
        string status = 5;
        string ctime = 6;
        string utime = 7;

    }
    repeated AgentInfo agents = 1;
}

message AgentRestartRequest {
    string id = 1;
    string op = 2;
}

message AgentAliasRequest{
    string id = 1;
    string alias = 2;
}

message GetAgentRequest {
    int32  agentstatus = 1;
    repeated string id = 2;
    repeated string name = 3;
}

service Agent {
    rpc GetAgents(GetAgentRequest) returns (AgentList){}
    rpc SetAgentAlias (AgentAliasRequest) returns (EmptyReply){}
    rpc OperateAgent (AgentRestartRequest) returns (EmptyReply) {}
}

//--------------------service---------------------------------------------
// 添加服务请求
message ServiceAddRequest {
    string name = 1;
    string dir = 2;
    string modulename = 3;
    string osuser = 4;
    string ospass = 5;
    string codepattern = 6;
    string pidfile = 7;
    string startcmd = 8;
    string stopcmd = 9;
    string agentid = 10;
    int32 groupid = 11;
}
// 添加服务响应
message ServiceAddReply {
    string serviceid = 1;
}

//删除服务请求
message ServiceDeleteRequest {
    string id = 1;
}

// 查询服务请求
message ServiceRequest {
    repeated string groupnames = 1;
    repeated string agentids = 2;
    repeated string moudlenames = 3;
    repeated string serviceids = 4;
    repeated string servicenames = 5;
}

// 查询服务结果响应
message ServiceList {
    message ServiceInfo {
        string id = 1;
        string name = 2;
        string dir = 3;
        string moudlename = 4;
        string osuser = 5;
        string codepattern = 6;
        int32  port = 7;
        string pidfile = 8;
        string startcmd = 9;
        string stopcmd = 10;
        string agentname = 12;
        string groupname = 13;
        string agentid = 14;
        string hostip = 15;
    }
    repeated ServiceInfo services = 1;
}

// 修改服务agent属组和group属组请求
message ServiceChangeOwnRequest {
    string id = 1;
    string agentid = 2;
    int32 groupid= 3;
}


service Service {
    rpc AddService (ServiceAddRequest) returns (ServiceAddReply) {}
    rpc DeleteService (ServiceDeleteRequest) returns (EmptyReply) {}
    rpc GetServices (ServiceRequest) returns (ServiceList) {}
    rpc ChangeServiceOwn(ServiceChangeOwnRequest) returns (EmptyReply) {}
}

//--------------------------------------task--------------------------------
message TaskNameRequest{
    string name = 1;
}

message TaskIdRequest{
    int32 id = 1;
}

//添加任务请求
message TaskAddRequest {
    string name = 1;
    bool isShow = 2;
}

//添加任务响应
message TaskAddReply{
    int32 taskid = 1;
}

// 获取任务请求
message GetTaskRequest{
    repeated int32 id = 1;
    repeated string name = 2;
}

// 任务列表
message TaskList {
    message TaskInfo {
        int32 id = 1;
        string name = 2;
        int32 status = 3;
        string ctime = 4;
        string starttime = 5;
        string endtime = 6;
        string releasename = 7;
        string groupname = 8;
    }
    repeated TaskInfo tasks = 1;
}
// 具体每个服务的操作，
// 如果operation是1(deploy)，则release-code-id要指定;否则不需要指定
message SpecificService {
    string serviceID = 1;
    int32  operation = 2;
    string customUpgradePattern = 3;
}

message TaskDetailsRequst {
    int32 taskID = 1;
    int32 releaseID = 2;
    repeated SpecificService sslist = 3;
}

message ExecutionList {
    message ExecutionInfo {
        string taskName = 1;
        int32 id = 2;
        string serviceName = 3;
        int32 operation = 4;
        int32 rCode = 5;
        string rMsg = 6;
        string customUpgradePattern = 7;
        int32 taskID = 8;
    }

    repeated ExecutionInfo executions = 2;
}


message TaskString {
    string taskstr = 1;
}

// 设置定时任务请求
message CronTaskAddRequest {
    int32 taskId = 1;
    string timedSpec = 2;
}

message CronTaskAddReply{
    int32 CronTaskID = 1;
}



message RemoveCronTaskRequest{
    int32 entryID = 1;
    int32 taskID  = 2;
}

// 查询定时任务请求
message GetCronTaskRequest{
    repeated int32 entryIDs = 1;
    repeated string taskNames  = 2;
}

message CronTaskList {
    message CronTask {
        int32 TaskId = 3;
        string TaskName = 4;
        int32 EntryId = 2;
        string TaskExecTIme = 5;
        string CTime = 6;
    }
    repeated CronTask tTasks = 1;
}

//
message GetExecutionDetailRequest{
    int32 ExecutionID = 1;
}

message ExecutionDetailsList {
    message ExecutionDetail {
        int32 StepNum = 1;
        string StepName = 2;
        string StepMsg = 3;
        int32 StepState = 4;
        string StepTime = 5;
    }
    repeated ExecutionDetail eDetails = 1;
}

service task {
    rpc AddTask (TaskAddRequest) returns (TaskAddReply) {}
    rpc DeleteTask (TaskNameRequest) returns (EmptyReply) {}
    rpc GetTasks (GetTaskRequest) returns (TaskList) {}
    rpc SetTaskDetails (TaskDetailsRequst) returns (EmptyReply) {}
    rpc GetTaskExecutions (TaskIdRequest) returns (ExecutionList) {}
    rpc GetExecutionDetail(GetExecutionDetailRequest) returns (ExecutionDetailsList){}
    rpc PublishTask (TaskIdRequest) returns (ExecutionList) {}
    rpc SetTimedTask(CronTaskAddRequest) returns(CronTaskAddReply){}
    rpc RemoveTimedTask(RemoveCronTaskRequest) returns(EmptyReply){}
    rpc GetTimedTasks(GetCronTaskRequest) returns(CronTaskList){}
}

